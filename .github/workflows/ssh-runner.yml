name: SSH on runner
on:
  workflow_dispatch:
    inputs:
      os:
        description: "Operating System"
        required: true
        default: ubuntu-latest
        type: choice
        options:
          - ubuntu-latest
          - macos-latest
          - windows-latest
      mod:
        description: "Install Go/Node modules"
        required: true
        default: true
        type: boolean

jobs:
  setup-ssh:
    name: Setup runner and open SSH endpoint
    runs-on: ${{ github.event.inputs.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Load variables from file
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: .github/workflows/utils/variables.json

      - name: Setup asdf
        uses: asdf-vm/actions/setup@9cd779f40fe38688dd19505ccbc4eaaf018b44e7
        with:
          asdf_version: 0.16.7

      - name: Setup go
        if: runner.os != 'Windows'
        run: |
          asdf plugin add golang
          asdf install golang
          echo "go_version=$(asdf current golang | xargs | cut -d ' ' -f 2)" >> $GITHUB_ENV

      - name: Cache go modules
        if: github.event.inputs.mod == 'true' && runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.go_version }}-${{ env.json_cache-versions_go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ env.go_version }}-${{ env.json_cache-versions_go }}-

      - name: Fetch go modules
        if: github.event.inputs.mod == 'true' && runner.os != 'Windows'
        working-directory: .
        run: go mod tidy

      - name: Install emacs
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get install -y emacs
          elif [ "$RUNNER_OS" == "Windows" ]; then
              choco install emacs
          else
              echo "Already installed!"
          fi

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
