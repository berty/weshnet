name: iOS
on:
  push:
    tags:
      - v*
    branches:
      - master
    paths:
      - 'go/**'
      - '!go/**.md'
      - 'go.*'
      - '**.go'
      - 'js/**'
      - '.github/workflows/ios.yml'
  pull_request:
    paths:
      - 'go/**'
      - '!go/**.md'
      - 'go.*'
      - '**.go'
      - 'js/**'
      - '!js/packages/berty-i18n/locale/*/*.json'
      - '.github/workflows/ios.yml'

jobs:
  build:
    name: Build for iOS
    runs-on: ${{ matrix.runner.labels }}
    strategy:
      matrix:
        runner: [
          { name: "DC4 macOS 11", labels: ["self-hosted", "dc4"], selfhosted: true },
          { name: "GitHub macOS 11", labels: ["macos-11"], selfhosted: false },
        ]
        golang: ['1.17.x']
        xcode: ['13.x']
        node: ['16.x']
    steps:
      - name: Pre-checkout cleanup
        if: ${{ matrix.runner.selfhosted }}
        run: |
          if [ -d js/ios/.gomobile-cache ]; then
            mv js/ios/.gomobile-cache $RUNNER_TEMP/.gomobile-cache
          fi

      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}  # see https://github.com/actions/checkout/issues/299

      - name: Post-checkout cleanup
        if: ${{ matrix.runner.selfhosted }}
        run: |
          if [ -d $RUNNER_TEMP/.gomobile-cache ]; then
            mv $RUNNER_TEMP/.gomobile-cache js/ios/.gomobile-cache
          fi

      - name: Setup XCode
        if: ${{ !matrix.runner.selfhosted }}
        # disabled on self-hosted because it requires authentication
        uses: maxim-lobanov/setup-xcode@v1.4.0
        with:
          xcode-version: ${{ matrix.xcode }}

      #- name: Setup Ruby
      #  uses: ruby/setup-ruby@v1
      #  env:
      #    # Needs to be set up for self-hosted runners, see:
      #    # https://github.com/ruby/setup-ruby#using-self-hosted-runners
      #    # Image used in runners: summerwind/actions-runner
      #    ImageOS: macos11
      #  with:
      #    ruby-version: 3.0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.golang }}

      - name: Setup Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node }}

      - name: Setup Bundler
        if: ${{ matrix.runner.selfhosted }}
        working-directory: ./js/ios
        run: |
          gem --version
          gem install bundler --user-install
          bundler -v
          bundle update --bundler

      - name: Cache Go modules
        uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key:          ${{ runner.os }}-go-${{ matrix.golang }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('go/**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ matrix.golang }}-${{ secrets.CACHE_VERSION }}-

      - name: Cache Node modules
        uses: actions/cache@v2.1.6
        with:
          path: js/node_modules
          key:          ${{ runner.OS }}-node-${{ matrix.node }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('js/yarn.lock') }}
          restore-keys: ${{ runner.OS }}-node-${{ matrix.node }}-${{ secrets.CACHE_VERSION }}-

      - name: Cache Ruby modules
        uses: actions/cache@v2.1.6
        with:
          path: js/vendor/bundle
          key:          ${{ runner.OS }}-bundle-v1-${{ hashFiles('js/Gemfile.lock') }}
          restore-keys: ${{ runner.OS }}-bundle-v1-

      - name: Cache Gomobile framework
        uses: n0izn0iz/mkache@v3.0.20
        if: github.ref != 'refs/heads/master' # this makes sure the VCS_REF is correct on master
        with:
          rule: ios/Frameworks/Bertybridge.xcframework
          makefile: js/Makefile
          key: ios-gomobile-${{ matrix.golang }}

      - name: Cache XCodeGen
        uses: actions/cache@v2.1.6
        with:
          path: js/vendor/xcodegen
          key:          ios-xcodegen-${{ matrix.xcode }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('js/XcodeGen.version') }}
          restore-keys: ios-xcodegen-${{ matrix.xcode }}-${{ secrets.CACHE_VERSION }}-

      - name: Cache XCode project
        uses: actions/cache@v2.1.6
        with:
          path: js/ios/Berty.xcodeproj
          key:          ios-xcodeproj-${{ matrix.xcode }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('js/ios/*.yaml') }}
          restore-keys: ios-xcodeproj-${{ matrix.xcode }}-${{ secrets.CACHE_VERSION }}-

      - name: Cache Pods and XCode workspace
        uses: actions/cache@v2.1.6
        with:
          path: |
            js/ios/Berty.xcworkspace
            js/ios/Pods
          key:          ios-xcodeworkspace-${{ matrix.xcode }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('js/ios/Podfile.lock', 'js/yarn.lock') }}
          restore-keys: ios-xcodeworkspace-${{ matrix.xcode }}-${{ secrets.CACHE_VERSION }}-

      - name: Setup macOS keychain
        working-directory: tool/build/dummy-identity
        run: |
          set -x
          KEYCHAIN_PATH=$RUNNER_TEMP/dummy.keychain

          security create-keychain -p "dummypass" $KEYCHAIN_PATH
          security default-keychain -s $KEYCHAIN_PATH
          security unlock-keychain -p "dummypass" $KEYCHAIN_PATH
          security set-keychain-settings $KEYCHAIN_PATH
          security import berty-dummy.p12 -t priv -f pkcs12 -P "dummypass" -T /usr/bin/codesign -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "dummypass" $KEYCHAIN_PATH

      - name: Build .env
        run: cat tool/build/shakebugs-infos/env.prod >> js/.env

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install iOS app deps (node_modules)
        working-directory: js
        run: make node_modules

      - name: Extracts pods hashes
        # we need to ignore the diff on some pods lock due to https://github.com/facebook/react-native/issues/31121
        working-directory: js
        run: node packages/scripts/extract-pods-hashes.js

      - name: Install iOS app deps (XCode Workspace)
        working-directory: js
        run: make ios.project

      - name: Check Podfile.lock diff
        working-directory: js
        run: |
          set -euo pipefail -o xtrace
          cp ios/Podfile.lock ios/Podfile.lock.bak
          node packages/scripts/restore-pods-hashes.js # see https://github.com/facebook/react-native/issues/31121
          if [[ $(git diff --text ios/Podfile.lock 2>&1 | tee $RUNNER_TEMP/berty-podfile.diff) ]]; then cat $RUNNER_TEMP/berty-podfile.diff && false; fi
          mv ios/Podfile.lock.bak ios/Podfile.lock

      - name: Install iOS app deps (gomobile)
        working-directory: js
        run: make ios.gomobile

      - name: Install iOS app deps (other)
        working-directory: js
        run: make ios.app_deps

      - name: Build the Archive
        working-directory: js
        run: |
          xcodebuild archive \
                CODE_SIGN_IDENTITY="" \
                CODE_SIGNING_ALLOWED=NO \
                ONLY_ACTIVE_ARCH=NO  \
                EXCLUDED_ARCHS='armv7 armv7s' \
                -workspace ios/Berty.xcworkspace \
                -scheme "Berty Yolo" \
                -sdk iphoneos \
                -archivePath $RUNNER_TEMP/Berty.xcarchive

      - name: Patch and sign the Archive
        working-directory: js
        run: |
          for lib in $RUNNER_TEMP/Berty.xcarchive/Products/Applications/Berty\ Yolo.app/Frameworks/*.dylib; do
            lipo -remove armv7 -remove armv7s "$lib" -output "$lib"
          done
          codesign -fs "Berty Dummy" $RUNNER_TEMP/Berty.xcarchive/Products/Applications/Berty\ Yolo.app
          mkdir Payload
          mv $RUNNER_TEMP/Berty.xcarchive/Products/Applications/Berty\ Yolo.app Payload/
          zip -r ${{ github.workspace }}/Berty\ Yolo.dummy-signed-ipa Payload

      - name: Upload the Archive
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/Berty Yolo.dummy-signed-ipa
          name: berty-yolo-${{github.sha}}.dummy-signed-ipa
          if-no-files-found: error
