// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: errcode.proto

package errcode

import (
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ErrCode int32

const (
	Undefined                                  ErrCode = 0
	TODO                                       ErrCode = 666
	ErrNotImplemented                          ErrCode = 777
	ErrInternal                                ErrCode = 888
	ErrInvalidInput                            ErrCode = 100
	ErrMissingInput                            ErrCode = 101
	ErrSerialization                           ErrCode = 102
	ErrDeserialization                         ErrCode = 103
	ErrStreamRead                              ErrCode = 104
	ErrStreamWrite                             ErrCode = 105
	ErrMissingMapKey                           ErrCode = 106
	ErrDBWrite                                 ErrCode = 107
	ErrDBRead                                  ErrCode = 108
	ErrCryptoRandomGeneration                  ErrCode = 200
	ErrCryptoKeyGeneration                     ErrCode = 201
	ErrCryptoNonceGeneration                   ErrCode = 202
	ErrCryptoSignature                         ErrCode = 203
	ErrCryptoSignatureVerification             ErrCode = 204
	ErrCryptoDecrypt                           ErrCode = 205
	ErrCryptoEncrypt                           ErrCode = 206
	ErrCryptoKeyConversion                     ErrCode = 207
	ErrOrbitDBInit                             ErrCode = 1000
	ErrOrbitDBOpen                             ErrCode = 1001
	ErrOrbitDBAppend                           ErrCode = 1002
	ErrOrbitDBDeserialization                  ErrCode = 1003
	ErrOrbitDBStoreCast                        ErrCode = 1004
	ErrHandshakeOwnEphemeralKeyGenSend         ErrCode = 1100
	ErrHandshakePeerEphemeralKeyRecv           ErrCode = 1101
	ErrHandshakeRequesterAuthenticateBoxKeyGen ErrCode = 1102
	ErrHandshakeResponderAcceptBoxKeyGen       ErrCode = 1103
	ErrHandshakeRequesterHello                 ErrCode = 1104
	ErrHandshakeResponderHello                 ErrCode = 1105
	ErrHandshakeRequesterAuthenticate          ErrCode = 1106
	ErrHandshakeResponderAccept                ErrCode = 1107
	ErrHandshakeRequesterAcknowledge           ErrCode = 1108
	ErrContactRequestSameAccount               ErrCode = 1200
	ErrContactRequestContactAlreadyAdded       ErrCode = 1201
	ErrContactRequestContactBlocked            ErrCode = 1202
	ErrContactRequestContactUndefined          ErrCode = 1203
	ErrContactRequestIncomingAlreadyReceived   ErrCode = 1204
	ErrGroupMemberLogEventOpen                 ErrCode = 1300
	ErrGroupMemberLogEventSignature            ErrCode = 1301
	ErrGroupMemberUnknownGroupID               ErrCode = 1302
	ErrGroupSecretOtherDestMember              ErrCode = 1303
	ErrGroupSecretAlreadySentToMember          ErrCode = 1304
	ErrGroupInvalidType                        ErrCode = 1305
	ErrGroupMissing                            ErrCode = 1306
	ErrMessageKeyPersistencePut                ErrCode = 1400
	ErrMessageKeyPersistenceGet                ErrCode = 1401
	ErrBridgeInterrupted                       ErrCode = 1500
	ErrBridgeNotRunning                        ErrCode = 1501
	ErrMessengerInvalidDeepLink                ErrCode = 2000
	ErrDBEntryAlreadyExists                    ErrCode = 2100
	ErrDBAddConversation                       ErrCode = 2101
	ErrDBAddContactRequestOutgoingSent         ErrCode = 2102
	ErrDBAddContactRequestOutgoingEnqueud      ErrCode = 2103
	ErrDBAddContactRequestIncomingReceived     ErrCode = 2104
	ErrDBAddContactRequestIncomingAccepted     ErrCode = 2105
	ErrDBAddGroupMemberDeviceAdded             ErrCode = 2106
	ErrReplayProcessGroupMetadata              ErrCode = 2200
	ErrReplayProcessGroupMessage               ErrCode = 2201
	ErrCLINoTermcaps                           ErrCode = 3001
)

var ErrCode_name = map[int32]string{
	0:    "Undefined",
	666:  "TODO",
	777:  "ErrNotImplemented",
	888:  "ErrInternal",
	100:  "ErrInvalidInput",
	101:  "ErrMissingInput",
	102:  "ErrSerialization",
	103:  "ErrDeserialization",
	104:  "ErrStreamRead",
	105:  "ErrStreamWrite",
	106:  "ErrMissingMapKey",
	107:  "ErrDBWrite",
	108:  "ErrDBRead",
	200:  "ErrCryptoRandomGeneration",
	201:  "ErrCryptoKeyGeneration",
	202:  "ErrCryptoNonceGeneration",
	203:  "ErrCryptoSignature",
	204:  "ErrCryptoSignatureVerification",
	205:  "ErrCryptoDecrypt",
	206:  "ErrCryptoEncrypt",
	207:  "ErrCryptoKeyConversion",
	1000: "ErrOrbitDBInit",
	1001: "ErrOrbitDBOpen",
	1002: "ErrOrbitDBAppend",
	1003: "ErrOrbitDBDeserialization",
	1004: "ErrOrbitDBStoreCast",
	1100: "ErrHandshakeOwnEphemeralKeyGenSend",
	1101: "ErrHandshakePeerEphemeralKeyRecv",
	1102: "ErrHandshakeRequesterAuthenticateBoxKeyGen",
	1103: "ErrHandshakeResponderAcceptBoxKeyGen",
	1104: "ErrHandshakeRequesterHello",
	1105: "ErrHandshakeResponderHello",
	1106: "ErrHandshakeRequesterAuthenticate",
	1107: "ErrHandshakeResponderAccept",
	1108: "ErrHandshakeRequesterAcknowledge",
	1200: "ErrContactRequestSameAccount",
	1201: "ErrContactRequestContactAlreadyAdded",
	1202: "ErrContactRequestContactBlocked",
	1203: "ErrContactRequestContactUndefined",
	1204: "ErrContactRequestIncomingAlreadyReceived",
	1300: "ErrGroupMemberLogEventOpen",
	1301: "ErrGroupMemberLogEventSignature",
	1302: "ErrGroupMemberUnknownGroupID",
	1303: "ErrGroupSecretOtherDestMember",
	1304: "ErrGroupSecretAlreadySentToMember",
	1305: "ErrGroupInvalidType",
	1306: "ErrGroupMissing",
	1400: "ErrMessageKeyPersistencePut",
	1401: "ErrMessageKeyPersistenceGet",
	1500: "ErrBridgeInterrupted",
	1501: "ErrBridgeNotRunning",
	2000: "ErrMessengerInvalidDeepLink",
	2100: "ErrDBEntryAlreadyExists",
	2101: "ErrDBAddConversation",
	2102: "ErrDBAddContactRequestOutgoingSent",
	2103: "ErrDBAddContactRequestOutgoingEnqueud",
	2104: "ErrDBAddContactRequestIncomingReceived",
	2105: "ErrDBAddContactRequestIncomingAccepted",
	2106: "ErrDBAddGroupMemberDeviceAdded",
	2200: "ErrReplayProcessGroupMetadata",
	2201: "ErrReplayProcessGroupMessage",
	3001: "ErrCLINoTermcaps",
}

var ErrCode_value = map[string]int32{
	"Undefined":                                  0,
	"TODO":                                       666,
	"ErrNotImplemented":                          777,
	"ErrInternal":                                888,
	"ErrInvalidInput":                            100,
	"ErrMissingInput":                            101,
	"ErrSerialization":                           102,
	"ErrDeserialization":                         103,
	"ErrStreamRead":                              104,
	"ErrStreamWrite":                             105,
	"ErrMissingMapKey":                           106,
	"ErrDBWrite":                                 107,
	"ErrDBRead":                                  108,
	"ErrCryptoRandomGeneration":                  200,
	"ErrCryptoKeyGeneration":                     201,
	"ErrCryptoNonceGeneration":                   202,
	"ErrCryptoSignature":                         203,
	"ErrCryptoSignatureVerification":             204,
	"ErrCryptoDecrypt":                           205,
	"ErrCryptoEncrypt":                           206,
	"ErrCryptoKeyConversion":                     207,
	"ErrOrbitDBInit":                             1000,
	"ErrOrbitDBOpen":                             1001,
	"ErrOrbitDBAppend":                           1002,
	"ErrOrbitDBDeserialization":                  1003,
	"ErrOrbitDBStoreCast":                        1004,
	"ErrHandshakeOwnEphemeralKeyGenSend":         1100,
	"ErrHandshakePeerEphemeralKeyRecv":           1101,
	"ErrHandshakeRequesterAuthenticateBoxKeyGen": 1102,
	"ErrHandshakeResponderAcceptBoxKeyGen":       1103,
	"ErrHandshakeRequesterHello":                 1104,
	"ErrHandshakeResponderHello":                 1105,
	"ErrHandshakeRequesterAuthenticate":          1106,
	"ErrHandshakeResponderAccept":                1107,
	"ErrHandshakeRequesterAcknowledge":           1108,
	"ErrContactRequestSameAccount":               1200,
	"ErrContactRequestContactAlreadyAdded":       1201,
	"ErrContactRequestContactBlocked":            1202,
	"ErrContactRequestContactUndefined":          1203,
	"ErrContactRequestIncomingAlreadyReceived":   1204,
	"ErrGroupMemberLogEventOpen":                 1300,
	"ErrGroupMemberLogEventSignature":            1301,
	"ErrGroupMemberUnknownGroupID":               1302,
	"ErrGroupSecretOtherDestMember":              1303,
	"ErrGroupSecretAlreadySentToMember":          1304,
	"ErrGroupInvalidType":                        1305,
	"ErrGroupMissing":                            1306,
	"ErrMessageKeyPersistencePut":                1400,
	"ErrMessageKeyPersistenceGet":                1401,
	"ErrBridgeInterrupted":                       1500,
	"ErrBridgeNotRunning":                        1501,
	"ErrMessengerInvalidDeepLink":                2000,
	"ErrDBEntryAlreadyExists":                    2100,
	"ErrDBAddConversation":                       2101,
	"ErrDBAddContactRequestOutgoingSent":         2102,
	"ErrDBAddContactRequestOutgoingEnqueud":      2103,
	"ErrDBAddContactRequestIncomingReceived":     2104,
	"ErrDBAddContactRequestIncomingAccepted":     2105,
	"ErrDBAddGroupMemberDeviceAdded":             2106,
	"ErrReplayProcessGroupMetadata":              2200,
	"ErrReplayProcessGroupMessage":               2201,
	"ErrCLINoTermcaps":                           3001,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}

func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4240057316120df7, []int{0}
}

type ErrDetails struct {
	Codes                []ErrCode `protobuf:"varint,1,rep,packed,name=codes,proto3,enum=berty.errcode.ErrCode" json:"codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ErrDetails) Reset()         { *m = ErrDetails{} }
func (m *ErrDetails) String() string { return proto.CompactTextString(m) }
func (*ErrDetails) ProtoMessage()    {}
func (*ErrDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_4240057316120df7, []int{0}
}
func (m *ErrDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrDetails.Unmarshal(m, b)
}
func (m *ErrDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrDetails.Marshal(b, m, deterministic)
}
func (m *ErrDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrDetails.Merge(m, src)
}
func (m *ErrDetails) XXX_Size() int {
	return xxx_messageInfo_ErrDetails.Size(m)
}
func (m *ErrDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ErrDetails proto.InternalMessageInfo

func (m *ErrDetails) GetCodes() []ErrCode {
	if m != nil {
		return m.Codes
	}
	return nil
}

func init() {
	proto.RegisterEnum("berty.errcode.ErrCode", ErrCode_name, ErrCode_value)
	proto.RegisterType((*ErrDetails)(nil), "berty.errcode.ErrDetails")
}

func init() { proto.RegisterFile("errcode.proto", fileDescriptor_4240057316120df7) }

var fileDescriptor_4240057316120df7 = []byte{
	// 1031 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x95, 0x4b, 0x73, 0x1b, 0x45,
	0x10, 0xc7, 0xa3, 0x82, 0x58, 0xd2, 0xb8, 0xec, 0xb4, 0xc7, 0xc6, 0x76, 0x5e, 0xb6, 0x63, 0xe2,
	0x10, 0x0c, 0x58, 0x55, 0x70, 0xe3, 0x26, 0x59, 0x5b, 0x8e, 0xca, 0x0f, 0xb9, 0x24, 0x07, 0xaa,
	0xb8, 0x8d, 0x77, 0xda, 0xab, 0x41, 0xab, 0x99, 0xcd, 0xec, 0xac, 0x12, 0xf1, 0x0d, 0xb8, 0xf3,
	0x48, 0xf2, 0x29, 0x78, 0x84, 0x47, 0xf8, 0x04, 0x3c, 0xf2, 0x30, 0x8f, 0x23, 0x1c, 0xb8, 0xf1,
	0xba, 0x13, 0x6e, 0xd4, 0xee, 0x8c, 0x6d, 0x09, 0x0b, 0xc3, 0x49, 0xda, 0x7f, 0xff, 0xb6, 0xa7,
	0xbb, 0xa7, 0xbb, 0x97, 0x8c, 0xa1, 0xd6, 0xbe, 0xe2, 0xb8, 0x12, 0x69, 0x65, 0x14, 0x1d, 0xdb,
	0x45, 0x6d, 0x7a, 0x2b, 0x4e, 0x3c, 0x37, 0x15, 0xa8, 0x40, 0x65, 0x96, 0x52, 0xfa, 0xcf, 0x42,
	0x8b, 0xaf, 0x12, 0xe2, 0x69, 0x5d, 0x45, 0xc3, 0x44, 0x18, 0xd3, 0x17, 0xc9, 0xe9, 0x94, 0x8d,
	0x67, 0x73, 0x0b, 0x4f, 0x5d, 0x1d, 0x7f, 0x79, 0x7a, 0x65, 0xc0, 0xc5, 0x8a, 0xa7, 0xf5, 0xaa,
	0xe2, 0xd8, 0xb0, 0xd0, 0xf2, 0x9f, 0xe3, 0x24, 0xef, 0x24, 0x3a, 0x46, 0x8a, 0xd7, 0x25, 0xc7,
	0x3d, 0x21, 0x91, 0xc3, 0x29, 0x5a, 0x24, 0x4f, 0xef, 0xd4, 0xab, 0x75, 0xb8, 0x7b, 0x9a, 0x4e,
	0x93, 0x09, 0x4f, 0xeb, 0x2d, 0x65, 0x6a, 0x9d, 0x28, 0xc4, 0x0e, 0x4a, 0x83, 0x1c, 0xde, 0x1e,
	0xa1, 0x40, 0x46, 0x3d, 0xad, 0x6b, 0xd2, 0xa0, 0x96, 0x2c, 0x84, 0x27, 0x23, 0x74, 0x92, 0x9c,
	0xc9, 0x94, 0x2e, 0x0b, 0x05, 0xaf, 0xc9, 0x28, 0x31, 0xc0, 0x9d, 0xb8, 0x29, 0xe2, 0x58, 0xc8,
	0xc0, 0x8a, 0x48, 0xa7, 0x08, 0x78, 0x5a, 0x37, 0x51, 0x0b, 0x16, 0x8a, 0xb7, 0x98, 0x11, 0x4a,
	0xc2, 0x1e, 0x9d, 0x26, 0x34, 0xcb, 0x25, 0x1e, 0xd0, 0x03, 0x3a, 0x41, 0xc6, 0x52, 0xda, 0x68,
	0x64, 0x9d, 0x06, 0x32, 0x0e, 0x2d, 0x4a, 0xc9, 0xf8, 0xa1, 0xf4, 0xba, 0x16, 0x06, 0x41, 0x38,
	0xa7, 0xee, 0xa4, 0x4d, 0x16, 0xad, 0x63, 0x0f, 0xde, 0xa4, 0xe3, 0xb6, 0x40, 0x15, 0x4b, 0xb5,
	0xd3, 0x44, 0xb3, 0xe7, 0xcc, 0x51, 0x48, 0xe7, 0xc8, 0xd9, 0xb4, 0x04, 0xba, 0x17, 0x19, 0xd5,
	0x60, 0x92, 0xab, 0xce, 0x1a, 0x4a, 0xd4, 0xf6, 0xe8, 0x2f, 0x73, 0xf4, 0x3c, 0x99, 0x3e, 0xb4,
	0xaf, 0x63, 0xaf, 0xcf, 0xf8, 0x55, 0x8e, 0x5e, 0x24, 0xb3, 0x87, 0xc6, 0x2d, 0x25, 0x7d, 0xec,
	0x33, 0x7f, 0x9d, 0xa3, 0x33, 0x59, 0x3e, 0xd6, 0xdc, 0x14, 0x81, 0x64, 0x26, 0xd1, 0x08, 0xdf,
	0xe4, 0xe8, 0xb3, 0x64, 0xee, 0xb8, 0xe1, 0x35, 0xd4, 0x62, 0x4f, 0xf8, 0xf6, 0xed, 0x07, 0x39,
	0xfa, 0x4c, 0x96, 0x8e, 0x85, 0xaa, 0xe8, 0xa7, 0xbf, 0xf0, 0x70, 0x50, 0xf6, 0xa4, 0x95, 0x1f,
	0x1d, 0x8b, 0x73, 0x55, 0xc9, 0x2e, 0xea, 0x38, 0x75, 0xf5, 0x38, 0x47, 0x27, 0xb3, 0x6a, 0xd5,
	0xf5, 0xae, 0x30, 0xd5, 0x4a, 0x4d, 0x0a, 0x03, 0xbf, 0xe4, 0x07, 0xc5, 0x7a, 0x84, 0x12, 0x7e,
	0xcd, 0x3b, 0xef, 0x4e, 0x2c, 0x47, 0x11, 0x4a, 0x0e, 0xbf, 0xe5, 0x5d, 0x95, 0x9c, 0xfc, 0xcf,
	0x0b, 0xfa, 0x3d, 0x4f, 0x67, 0xc9, 0xe4, 0x91, 0xbd, 0x69, 0x94, 0xc6, 0x55, 0x16, 0x1b, 0xf8,
	0x23, 0x4f, 0x9f, 0x23, 0x8b, 0x9e, 0xd6, 0xd7, 0x98, 0xe4, 0x71, 0x8b, 0xb5, 0xb1, 0x7e, 0x53,
	0x7a, 0x51, 0x0b, 0x3b, 0xa8, 0x59, 0x68, 0xcb, 0xd9, 0x4c, 0x8f, 0x78, 0x50, 0xa0, 0x4b, 0x64,
	0xa1, 0x1f, 0xdc, 0x46, 0xd4, 0xfd, 0x64, 0x03, 0xfd, 0x2e, 0x3c, 0x2c, 0xd0, 0x12, 0x59, 0xee,
	0xc7, 0x1a, 0x78, 0x23, 0xc1, 0xd8, 0xa0, 0x2e, 0x27, 0xa6, 0x85, 0xd2, 0xa4, 0xf5, 0xc3, 0x8a,
	0xba, 0x65, 0x7d, 0xc3, 0xa3, 0x02, 0x7d, 0x9e, 0x5c, 0x1e, 0x7c, 0x21, 0x8e, 0x94, 0xe4, 0xa8,
	0xcb, 0xbe, 0x8f, 0x91, 0x39, 0x42, 0x1f, 0x17, 0xe8, 0x3c, 0x39, 0x37, 0xd4, 0xf7, 0x35, 0x0c,
	0x43, 0x05, 0xfb, 0x43, 0x00, 0xe7, 0xcb, 0x02, 0xdf, 0x16, 0xe8, 0x15, 0x72, 0xe9, 0x3f, 0xa3,
	0x83, 0xef, 0x0a, 0x74, 0x81, 0x9c, 0x3f, 0x21, 0x28, 0xf8, 0xfe, 0x58, 0x39, 0x8e, 0x3c, 0xf9,
	0x6d, 0xa9, 0x6e, 0x86, 0xc8, 0x03, 0x84, 0x1f, 0x0a, 0xf4, 0x12, 0xb9, 0x90, 0x4d, 0xb0, 0x34,
	0xcc, 0x37, 0x0e, 0x6a, 0xb2, 0x0e, 0x96, 0x7d, 0x5f, 0x25, 0xd2, 0xc0, 0x07, 0x45, 0x57, 0x80,
	0x41, 0xc4, 0x3d, 0x95, 0x43, 0x8d, 0x8c, 0xf7, 0xca, 0x9c, 0x23, 0x87, 0x0f, 0x8b, 0xf4, 0x32,
	0x99, 0xff, 0x37, 0xb4, 0x12, 0x2a, 0xbf, 0x8d, 0x1c, 0x3e, 0x2a, 0xba, 0x24, 0x87, 0x52, 0x47,
	0x2b, 0xe4, 0xe3, 0x22, 0x7d, 0x89, 0x5c, 0x3d, 0xc6, 0xd5, 0xa4, 0xaf, 0x3a, 0x42, 0x06, 0xee,
	0xe4, 0x06, 0xfa, 0x28, 0xba, 0xc8, 0xe1, 0x5e, 0xd1, 0x15, 0x77, 0x4d, 0xab, 0x24, 0xda, 0xc4,
	0xce, 0x2e, 0xea, 0x0d, 0x15, 0x78, 0x5d, 0x94, 0x26, 0xeb, 0xcd, 0x77, 0x88, 0x8b, 0x6e, 0x08,
	0x70, 0x34, 0x5b, 0xef, 0x12, 0x57, 0x91, 0x3e, 0xea, 0xba, 0x4c, 0x2b, 0x26, 0x33, 0xa5, 0x56,
	0x85, 0xf7, 0x08, 0x5d, 0x24, 0x17, 0x0f, 0x90, 0x26, 0xfa, 0x1a, 0x4d, 0xdd, 0xb4, 0x30, 0xdd,
	0x3b, 0xc6, 0xbe, 0x01, 0xef, 0x13, 0x97, 0x64, 0x1f, 0xe3, 0x22, 0x6e, 0xa2, 0x34, 0x3b, 0xca,
	0x71, 0xb7, 0x89, 0xeb, 0x7c, 0xeb, 0xdc, 0x2e, 0xbe, 0x9d, 0x5e, 0x84, 0x70, 0x87, 0xd0, 0xa9,
	0x6c, 0xf1, 0xd9, 0x40, 0xec, 0x4e, 0x82, 0xbb, 0xc4, 0xdd, 0xfc, 0x26, 0xc6, 0x31, 0x0b, 0x70,
	0x1d, 0x7b, 0xdb, 0xe9, 0x94, 0xc6, 0x06, 0xa5, 0x8f, 0xdb, 0x89, 0x81, 0x27, 0x27, 0x12, 0x6b,
	0x68, 0xe0, 0x2f, 0x42, 0xcf, 0x92, 0x29, 0x4f, 0xeb, 0x8a, 0x16, 0x3c, 0xc0, 0x6c, 0xff, 0xea,
	0x24, 0x4a, 0x97, 0xf2, 0x8f, 0xa3, 0x2e, 0x1c, 0x6b, 0xda, 0x52, 0xa6, 0x91, 0x48, 0x99, 0x1e,
	0xfc, 0xd3, 0x68, 0x9f, 0x5b, 0x94, 0x01, 0x1e, 0x6c, 0xe9, 0x2a, 0x62, 0xb4, 0x21, 0x64, 0x1b,
	0xf6, 0xcf, 0xd0, 0x0b, 0x64, 0x26, 0xdb, 0x8c, 0x9e, 0x34, 0xba, 0xe7, 0xd2, 0xf5, 0x6e, 0x89,
	0xd8, 0xc4, 0x70, 0x0f, 0xdc, 0xa1, 0xd5, 0x4a, 0x99, 0x73, 0xb7, 0x5c, 0xec, 0xf4, 0x7f, 0x02,
	0x6e, 0xc6, 0x0f, 0x4c, 0x7d, 0xb7, 0x5d, 0x4f, 0x4c, 0xa0, 0x84, 0x0c, 0xd2, 0xa2, 0xc1, 0xa7,
	0x40, 0x97, 0xc9, 0xd2, 0xc9, 0xa0, 0x27, 0x6f, 0x24, 0x98, 0x70, 0xf8, 0x0c, 0xe8, 0x0b, 0xe4,
	0xca, 0x70, 0xf6, 0xa0, 0x85, 0x0e, 0x7b, 0xe7, 0xf3, 0xff, 0x01, 0xdb, 0xc1, 0x42, 0x0e, 0xf7,
	0xc1, 0x6d, 0xdf, 0x0c, 0xee, 0x6b, 0x93, 0x2a, 0x76, 0x85, 0x8f, 0x76, 0x14, 0xbe, 0x00, 0xd7,
	0x23, 0x0d, 0x8c, 0x42, 0xd6, 0xdb, 0xd6, 0xca, 0xc7, 0x38, 0x76, 0xb0, 0x61, 0x9c, 0x19, 0x06,
	0xb7, 0x27, 0x5c, 0xab, 0x0d, 0x63, 0xb2, 0xbb, 0x83, 0x3b, 0x13, 0x07, 0xdb, 0x7a, 0xa3, 0xb6,
	0xa5, 0x76, 0x50, 0x77, 0x7c, 0x16, 0xc5, 0x70, 0x7f, 0xa6, 0xb2, 0xb4, 0xff, 0xf3, 0xdc, 0xa9,
	0x37, 0xe6, 0xed, 0xd7, 0xd9, 0xa0, 0xdf, 0x2a, 0x65, 0x7f, 0x4b, 0x81, 0x2a, 0x45, 0xed, 0xa0,
	0xe4, 0xbe, 0xd7, 0xbb, 0x23, 0xd9, 0x37, 0xfe, 0x95, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd2,
	0xe5, 0x6a, 0xe2, 0x19, 0x08, 0x00, 0x00,
}
