// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bertyprotocol.proto

package bertyprotocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Contact_ContactStatus int32

const (
	Contact_Unknown    Contact_ContactStatus = 0
	Contact_Myself     Contact_ContactStatus = 1
	Contact_Contact    Contact_ContactStatus = 2
	Contact_Trusted    Contact_ContactStatus = 3
	Contact_Blocked    Contact_ContactStatus = 4
	Contact_RequestIn  Contact_ContactStatus = 5
	Contact_RequestOut Contact_ContactStatus = 6
)

var Contact_ContactStatus_name = map[int32]string{
	0: "Unknown",
	1: "Myself",
	2: "Contact",
	3: "Trusted",
	4: "Blocked",
	5: "RequestIn",
	6: "RequestOut",
}

var Contact_ContactStatus_value = map[string]int32{
	"Unknown":    0,
	"Myself":     1,
	"Contact":    2,
	"Trusted":    3,
	"Blocked":    4,
	"RequestIn":  5,
	"RequestOut": 6,
}

func (x Contact_ContactStatus) String() string {
	return proto.EnumName(Contact_ContactStatus_name, int32(x))
}

func (Contact_ContactStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{2, 0}
}

type SigChainEntry struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SigChainEntry) Reset()         { *m = SigChainEntry{} }
func (m *SigChainEntry) String() string { return proto.CompactTextString(m) }
func (*SigChainEntry) ProtoMessage()    {}
func (*SigChainEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{0}
}
func (m *SigChainEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SigChainEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SigChainEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SigChainEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SigChainEntry.Merge(m, src)
}
func (m *SigChainEntry) XXX_Size() int {
	return m.Size()
}
func (m *SigChainEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SigChainEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SigChainEntry proto.InternalMessageInfo

type SigChain struct {
	Entries              []*SigChainEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SigChain) Reset()         { *m = SigChain{} }
func (m *SigChain) String() string { return proto.CompactTextString(m) }
func (*SigChain) ProtoMessage()    {}
func (*SigChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{1}
}
func (m *SigChain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SigChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SigChain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SigChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SigChain.Merge(m, src)
}
func (m *SigChain) XXX_Size() int {
	return m.Size()
}
func (m *SigChain) XXX_DiscardUnknown() {
	xxx_messageInfo_SigChain.DiscardUnknown(m)
}

var xxx_messageInfo_SigChain proto.InternalMessageInfo

func (m *SigChain) GetEntries() []*SigChainEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Contact struct {
	// AccountID = sig_chain.entries[0].pub_key
	SigChain             *SigChain             `protobuf:"bytes,1,opt,name=sig_chain,json=sigChain,proto3" json:"sig_chain,omitempty"`
	Metadata             []byte                `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	RendezvousPointSeed  []byte                `protobuf:"bytes,3,opt,name=rendezvous_point_seed,json=rendezvousPointSeed,proto3" json:"rendezvous_point_seed,omitempty"`
	SharedSecret         []byte                `protobuf:"bytes,4,opt,name=shared_secret,json=sharedSecret,proto3" json:"shared_secret,omitempty"`
	ContactStatus        Contact_ContactStatus `protobuf:"varint,5,opt,name=contact_status,json=contactStatus,proto3,enum=Contact_ContactStatus" json:"contact_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{2}
}
func (m *Contact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return m.Size()
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetSigChain() *SigChain {
	if m != nil {
		return m.SigChain
	}
	return nil
}

func (m *Contact) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Contact) GetRendezvousPointSeed() []byte {
	if m != nil {
		return m.RendezvousPointSeed
	}
	return nil
}

func (m *Contact) GetSharedSecret() []byte {
	if m != nil {
		return m.SharedSecret
	}
	return nil
}

func (m *Contact) GetContactStatus() Contact_ContactStatus {
	if m != nil {
		return m.ContactStatus
	}
	return Contact_Unknown
}

type AccountConfig struct {
	RendezvousPointEnabled bool     `protobuf:"varint,1,opt,name=rendezvous_point_enabled,json=rendezvousPointEnabled,proto3" json:"rendezvous_point_enabled,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *AccountConfig) Reset()         { *m = AccountConfig{} }
func (m *AccountConfig) String() string { return proto.CompactTextString(m) }
func (*AccountConfig) ProtoMessage()    {}
func (*AccountConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{3}
}
func (m *AccountConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountConfig.Merge(m, src)
}
func (m *AccountConfig) XXX_Size() int {
	return m.Size()
}
func (m *AccountConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AccountConfig proto.InternalMessageInfo

func (m *AccountConfig) GetRendezvousPointEnabled() bool {
	if m != nil {
		return m.RendezvousPointEnabled
	}
	return false
}

type DeviceConfig struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceConfig) Reset()         { *m = DeviceConfig{} }
func (m *DeviceConfig) String() string { return proto.CompactTextString(m) }
func (*DeviceConfig) ProtoMessage()    {}
func (*DeviceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{4}
}
func (m *DeviceConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeviceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeviceConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeviceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceConfig.Merge(m, src)
}
func (m *DeviceConfig) XXX_Size() int {
	return m.Size()
}
func (m *DeviceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceConfig proto.InternalMessageInfo

type Device struct {
	DevicePubKey         []byte   `protobuf:"bytes,1,opt,name=device_pub_key,json=devicePubKey,proto3" json:"device_pub_key,omitempty"`
	AccountPubKey        []byte   `protobuf:"bytes,2,opt,name=account_pub_key,json=accountPubKey,proto3" json:"account_pub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{5}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Device.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return m.Size()
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDevicePubKey() []byte {
	if m != nil {
		return m.DevicePubKey
	}
	return nil
}

func (m *Device) GetAccountPubKey() []byte {
	if m != nil {
		return m.AccountPubKey
	}
	return nil
}

type EventSubscribeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventSubscribeRequest) Reset()         { *m = EventSubscribeRequest{} }
func (m *EventSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*EventSubscribeRequest) ProtoMessage()    {}
func (*EventSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{6}
}
func (m *EventSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventSubscribeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSubscribeRequest.Merge(m, src)
}
func (m *EventSubscribeRequest) XXX_Size() int {
	return m.Size()
}
func (m *EventSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventSubscribeRequest proto.InternalMessageInfo

type EventStream struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventStream) Reset()         { *m = EventStream{} }
func (m *EventStream) String() string { return proto.CompactTextString(m) }
func (*EventStream) ProtoMessage()    {}
func (*EventStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{7}
}
func (m *EventStream) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventStream.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventStream.Merge(m, src)
}
func (m *EventStream) XXX_Size() int {
	return m.Size()
}
func (m *EventStream) XXX_DiscardUnknown() {
	xxx_messageInfo_EventStream.DiscardUnknown(m)
}

var xxx_messageInfo_EventStream proto.InternalMessageInfo

type CurrentDeviceExportDataRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentDeviceExportDataRequest) Reset()         { *m = CurrentDeviceExportDataRequest{} }
func (m *CurrentDeviceExportDataRequest) String() string { return proto.CompactTextString(m) }
func (*CurrentDeviceExportDataRequest) ProtoMessage()    {}
func (*CurrentDeviceExportDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{8}
}
func (m *CurrentDeviceExportDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CurrentDeviceExportDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CurrentDeviceExportDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CurrentDeviceExportDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentDeviceExportDataRequest.Merge(m, src)
}
func (m *CurrentDeviceExportDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *CurrentDeviceExportDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentDeviceExportDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentDeviceExportDataRequest proto.InternalMessageInfo

type CurrentDeviceExportDataReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentDeviceExportDataReply) Reset()         { *m = CurrentDeviceExportDataReply{} }
func (m *CurrentDeviceExportDataReply) String() string { return proto.CompactTextString(m) }
func (*CurrentDeviceExportDataReply) ProtoMessage()    {}
func (*CurrentDeviceExportDataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{9}
}
func (m *CurrentDeviceExportDataReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CurrentDeviceExportDataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CurrentDeviceExportDataReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CurrentDeviceExportDataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentDeviceExportDataReply.Merge(m, src)
}
func (m *CurrentDeviceExportDataReply) XXX_Size() int {
	return m.Size()
}
func (m *CurrentDeviceExportDataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentDeviceExportDataReply.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentDeviceExportDataReply proto.InternalMessageInfo

type AccountGetInformationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountGetInformationRequest) Reset()         { *m = AccountGetInformationRequest{} }
func (m *AccountGetInformationRequest) String() string { return proto.CompactTextString(m) }
func (*AccountGetInformationRequest) ProtoMessage()    {}
func (*AccountGetInformationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{10}
}
func (m *AccountGetInformationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetInformationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetInformationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetInformationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetInformationRequest.Merge(m, src)
}
func (m *AccountGetInformationRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetInformationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetInformationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetInformationRequest proto.InternalMessageInfo

type AccountGetInformationReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountGetInformationReply) Reset()         { *m = AccountGetInformationReply{} }
func (m *AccountGetInformationReply) String() string { return proto.CompactTextString(m) }
func (*AccountGetInformationReply) ProtoMessage()    {}
func (*AccountGetInformationReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{11}
}
func (m *AccountGetInformationReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetInformationReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetInformationReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetInformationReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetInformationReply.Merge(m, src)
}
func (m *AccountGetInformationReply) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetInformationReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetInformationReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetInformationReply proto.InternalMessageInfo

type CurrentDeviceGetConfigurationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentDeviceGetConfigurationRequest) Reset()         { *m = CurrentDeviceGetConfigurationRequest{} }
func (m *CurrentDeviceGetConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*CurrentDeviceGetConfigurationRequest) ProtoMessage()    {}
func (*CurrentDeviceGetConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{12}
}
func (m *CurrentDeviceGetConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CurrentDeviceGetConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CurrentDeviceGetConfigurationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CurrentDeviceGetConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentDeviceGetConfigurationRequest.Merge(m, src)
}
func (m *CurrentDeviceGetConfigurationRequest) XXX_Size() int {
	return m.Size()
}
func (m *CurrentDeviceGetConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentDeviceGetConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentDeviceGetConfigurationRequest proto.InternalMessageInfo

type CurrentDeviceGetConfigurationReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentDeviceGetConfigurationReply) Reset()         { *m = CurrentDeviceGetConfigurationReply{} }
func (m *CurrentDeviceGetConfigurationReply) String() string { return proto.CompactTextString(m) }
func (*CurrentDeviceGetConfigurationReply) ProtoMessage()    {}
func (*CurrentDeviceGetConfigurationReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{13}
}
func (m *CurrentDeviceGetConfigurationReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CurrentDeviceGetConfigurationReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CurrentDeviceGetConfigurationReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CurrentDeviceGetConfigurationReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentDeviceGetConfigurationReply.Merge(m, src)
}
func (m *CurrentDeviceGetConfigurationReply) XXX_Size() int {
	return m.Size()
}
func (m *CurrentDeviceGetConfigurationReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentDeviceGetConfigurationReply.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentDeviceGetConfigurationReply proto.InternalMessageInfo

type AccountGetConfigurationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountGetConfigurationRequest) Reset()         { *m = AccountGetConfigurationRequest{} }
func (m *AccountGetConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*AccountGetConfigurationRequest) ProtoMessage()    {}
func (*AccountGetConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{14}
}
func (m *AccountGetConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetConfigurationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetConfigurationRequest.Merge(m, src)
}
func (m *AccountGetConfigurationRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetConfigurationRequest proto.InternalMessageInfo

type AccountGetConfigurationReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountGetConfigurationReply) Reset()         { *m = AccountGetConfigurationReply{} }
func (m *AccountGetConfigurationReply) String() string { return proto.CompactTextString(m) }
func (*AccountGetConfigurationReply) ProtoMessage()    {}
func (*AccountGetConfigurationReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{15}
}
func (m *AccountGetConfigurationReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetConfigurationReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetConfigurationReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetConfigurationReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetConfigurationReply.Merge(m, src)
}
func (m *AccountGetConfigurationReply) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetConfigurationReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetConfigurationReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetConfigurationReply proto.InternalMessageInfo

type AccountLinkNewDeviceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountLinkNewDeviceRequest) Reset()         { *m = AccountLinkNewDeviceRequest{} }
func (m *AccountLinkNewDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*AccountLinkNewDeviceRequest) ProtoMessage()    {}
func (*AccountLinkNewDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{16}
}
func (m *AccountLinkNewDeviceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountLinkNewDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountLinkNewDeviceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountLinkNewDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountLinkNewDeviceRequest.Merge(m, src)
}
func (m *AccountLinkNewDeviceRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountLinkNewDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountLinkNewDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountLinkNewDeviceRequest proto.InternalMessageInfo

type AccountLinkNewDeviceReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountLinkNewDeviceReply) Reset()         { *m = AccountLinkNewDeviceReply{} }
func (m *AccountLinkNewDeviceReply) String() string { return proto.CompactTextString(m) }
func (*AccountLinkNewDeviceReply) ProtoMessage()    {}
func (*AccountLinkNewDeviceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{17}
}
func (m *AccountLinkNewDeviceReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountLinkNewDeviceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountLinkNewDeviceReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountLinkNewDeviceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountLinkNewDeviceReply.Merge(m, src)
}
func (m *AccountLinkNewDeviceReply) XXX_Size() int {
	return m.Size()
}
func (m *AccountLinkNewDeviceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountLinkNewDeviceReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountLinkNewDeviceReply proto.InternalMessageInfo

type AccountDisableIncomingContactRequestRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountDisableIncomingContactRequestRequest) Reset() {
	*m = AccountDisableIncomingContactRequestRequest{}
}
func (m *AccountDisableIncomingContactRequestRequest) String() string {
	return proto.CompactTextString(m)
}
func (*AccountDisableIncomingContactRequestRequest) ProtoMessage() {}
func (*AccountDisableIncomingContactRequestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{18}
}
func (m *AccountDisableIncomingContactRequestRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountDisableIncomingContactRequestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountDisableIncomingContactRequestRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountDisableIncomingContactRequestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountDisableIncomingContactRequestRequest.Merge(m, src)
}
func (m *AccountDisableIncomingContactRequestRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountDisableIncomingContactRequestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountDisableIncomingContactRequestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountDisableIncomingContactRequestRequest proto.InternalMessageInfo

type AccountDisableIncomingContactRequestReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountDisableIncomingContactRequestReply) Reset() {
	*m = AccountDisableIncomingContactRequestReply{}
}
func (m *AccountDisableIncomingContactRequestReply) String() string { return proto.CompactTextString(m) }
func (*AccountDisableIncomingContactRequestReply) ProtoMessage()    {}
func (*AccountDisableIncomingContactRequestReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{19}
}
func (m *AccountDisableIncomingContactRequestReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountDisableIncomingContactRequestReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountDisableIncomingContactRequestReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountDisableIncomingContactRequestReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountDisableIncomingContactRequestReply.Merge(m, src)
}
func (m *AccountDisableIncomingContactRequestReply) XXX_Size() int {
	return m.Size()
}
func (m *AccountDisableIncomingContactRequestReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountDisableIncomingContactRequestReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountDisableIncomingContactRequestReply proto.InternalMessageInfo

type AccountEnableIncomingContactRequestRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountEnableIncomingContactRequestRequest) Reset() {
	*m = AccountEnableIncomingContactRequestRequest{}
}
func (m *AccountEnableIncomingContactRequestRequest) String() string {
	return proto.CompactTextString(m)
}
func (*AccountEnableIncomingContactRequestRequest) ProtoMessage() {}
func (*AccountEnableIncomingContactRequestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{20}
}
func (m *AccountEnableIncomingContactRequestRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountEnableIncomingContactRequestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountEnableIncomingContactRequestRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountEnableIncomingContactRequestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountEnableIncomingContactRequestRequest.Merge(m, src)
}
func (m *AccountEnableIncomingContactRequestRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountEnableIncomingContactRequestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountEnableIncomingContactRequestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountEnableIncomingContactRequestRequest proto.InternalMessageInfo

type AccountEnableIncomingContactRequestReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountEnableIncomingContactRequestReply) Reset() {
	*m = AccountEnableIncomingContactRequestReply{}
}
func (m *AccountEnableIncomingContactRequestReply) String() string { return proto.CompactTextString(m) }
func (*AccountEnableIncomingContactRequestReply) ProtoMessage()    {}
func (*AccountEnableIncomingContactRequestReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{21}
}
func (m *AccountEnableIncomingContactRequestReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountEnableIncomingContactRequestReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountEnableIncomingContactRequestReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountEnableIncomingContactRequestReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountEnableIncomingContactRequestReply.Merge(m, src)
}
func (m *AccountEnableIncomingContactRequestReply) XXX_Size() int {
	return m.Size()
}
func (m *AccountEnableIncomingContactRequestReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountEnableIncomingContactRequestReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountEnableIncomingContactRequestReply proto.InternalMessageInfo

type AccountResetIncomingContactRequestLinkRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountResetIncomingContactRequestLinkRequest) Reset() {
	*m = AccountResetIncomingContactRequestLinkRequest{}
}
func (m *AccountResetIncomingContactRequestLinkRequest) String() string {
	return proto.CompactTextString(m)
}
func (*AccountResetIncomingContactRequestLinkRequest) ProtoMessage() {}
func (*AccountResetIncomingContactRequestLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{22}
}
func (m *AccountResetIncomingContactRequestLinkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountResetIncomingContactRequestLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountResetIncomingContactRequestLinkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountResetIncomingContactRequestLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResetIncomingContactRequestLinkRequest.Merge(m, src)
}
func (m *AccountResetIncomingContactRequestLinkRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountResetIncomingContactRequestLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResetIncomingContactRequestLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResetIncomingContactRequestLinkRequest proto.InternalMessageInfo

type AccountResetIncomingContactRequestLinkReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountResetIncomingContactRequestLinkReply) Reset() {
	*m = AccountResetIncomingContactRequestLinkReply{}
}
func (m *AccountResetIncomingContactRequestLinkReply) String() string {
	return proto.CompactTextString(m)
}
func (*AccountResetIncomingContactRequestLinkReply) ProtoMessage() {}
func (*AccountResetIncomingContactRequestLinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{23}
}
func (m *AccountResetIncomingContactRequestLinkReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountResetIncomingContactRequestLinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountResetIncomingContactRequestLinkReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountResetIncomingContactRequestLinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResetIncomingContactRequestLinkReply.Merge(m, src)
}
func (m *AccountResetIncomingContactRequestLinkReply) XXX_Size() int {
	return m.Size()
}
func (m *AccountResetIncomingContactRequestLinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResetIncomingContactRequestLinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResetIncomingContactRequestLinkReply proto.InternalMessageInfo

type ContactRequestAcceptRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestAcceptRequest) Reset()         { *m = ContactRequestAcceptRequest{} }
func (m *ContactRequestAcceptRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRequestAcceptRequest) ProtoMessage()    {}
func (*ContactRequestAcceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{24}
}
func (m *ContactRequestAcceptRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestAcceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestAcceptRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestAcceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestAcceptRequest.Merge(m, src)
}
func (m *ContactRequestAcceptRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestAcceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestAcceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestAcceptRequest proto.InternalMessageInfo

type ContactRequestAcceptReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestAcceptReply) Reset()         { *m = ContactRequestAcceptReply{} }
func (m *ContactRequestAcceptReply) String() string { return proto.CompactTextString(m) }
func (*ContactRequestAcceptReply) ProtoMessage()    {}
func (*ContactRequestAcceptReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{25}
}
func (m *ContactRequestAcceptReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestAcceptReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestAcceptReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestAcceptReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestAcceptReply.Merge(m, src)
}
func (m *ContactRequestAcceptReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestAcceptReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestAcceptReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestAcceptReply proto.InternalMessageInfo

type ContactRequestDiscardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestDiscardRequest) Reset()         { *m = ContactRequestDiscardRequest{} }
func (m *ContactRequestDiscardRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRequestDiscardRequest) ProtoMessage()    {}
func (*ContactRequestDiscardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{26}
}
func (m *ContactRequestDiscardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestDiscardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestDiscardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestDiscardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestDiscardRequest.Merge(m, src)
}
func (m *ContactRequestDiscardRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestDiscardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestDiscardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestDiscardRequest proto.InternalMessageInfo

type ContactRequestDiscardReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestDiscardReply) Reset()         { *m = ContactRequestDiscardReply{} }
func (m *ContactRequestDiscardReply) String() string { return proto.CompactTextString(m) }
func (*ContactRequestDiscardReply) ProtoMessage()    {}
func (*ContactRequestDiscardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{27}
}
func (m *ContactRequestDiscardReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestDiscardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestDiscardReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestDiscardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestDiscardReply.Merge(m, src)
}
func (m *ContactRequestDiscardReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestDiscardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestDiscardReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestDiscardReply proto.InternalMessageInfo

type ContactRequestListIncomingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestListIncomingRequest) Reset()         { *m = ContactRequestListIncomingRequest{} }
func (m *ContactRequestListIncomingRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRequestListIncomingRequest) ProtoMessage()    {}
func (*ContactRequestListIncomingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{28}
}
func (m *ContactRequestListIncomingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestListIncomingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestListIncomingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestListIncomingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestListIncomingRequest.Merge(m, src)
}
func (m *ContactRequestListIncomingRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestListIncomingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestListIncomingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestListIncomingRequest proto.InternalMessageInfo

type ContactRequestListIncomingReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestListIncomingReply) Reset()         { *m = ContactRequestListIncomingReply{} }
func (m *ContactRequestListIncomingReply) String() string { return proto.CompactTextString(m) }
func (*ContactRequestListIncomingReply) ProtoMessage()    {}
func (*ContactRequestListIncomingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{29}
}
func (m *ContactRequestListIncomingReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestListIncomingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestListIncomingReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestListIncomingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestListIncomingReply.Merge(m, src)
}
func (m *ContactRequestListIncomingReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestListIncomingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestListIncomingReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestListIncomingReply proto.InternalMessageInfo

type ContactRequestListOutgoingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestListOutgoingRequest) Reset()         { *m = ContactRequestListOutgoingRequest{} }
func (m *ContactRequestListOutgoingRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRequestListOutgoingRequest) ProtoMessage()    {}
func (*ContactRequestListOutgoingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{30}
}
func (m *ContactRequestListOutgoingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestListOutgoingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestListOutgoingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestListOutgoingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestListOutgoingRequest.Merge(m, src)
}
func (m *ContactRequestListOutgoingRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestListOutgoingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestListOutgoingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestListOutgoingRequest proto.InternalMessageInfo

type ContactRequestListOutgoingReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestListOutgoingReply) Reset()         { *m = ContactRequestListOutgoingReply{} }
func (m *ContactRequestListOutgoingReply) String() string { return proto.CompactTextString(m) }
func (*ContactRequestListOutgoingReply) ProtoMessage()    {}
func (*ContactRequestListOutgoingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{31}
}
func (m *ContactRequestListOutgoingReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestListOutgoingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestListOutgoingReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestListOutgoingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestListOutgoingReply.Merge(m, src)
}
func (m *ContactRequestListOutgoingReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestListOutgoingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestListOutgoingReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestListOutgoingReply proto.InternalMessageInfo

type ContactRequestSendRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestSendRequest) Reset()         { *m = ContactRequestSendRequest{} }
func (m *ContactRequestSendRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRequestSendRequest) ProtoMessage()    {}
func (*ContactRequestSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{32}
}
func (m *ContactRequestSendRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestSendRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestSendRequest.Merge(m, src)
}
func (m *ContactRequestSendRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestSendRequest proto.InternalMessageInfo

type ContactRequestSendReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestSendReply) Reset()         { *m = ContactRequestSendReply{} }
func (m *ContactRequestSendReply) String() string { return proto.CompactTextString(m) }
func (*ContactRequestSendReply) ProtoMessage()    {}
func (*ContactRequestSendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{33}
}
func (m *ContactRequestSendReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestSendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestSendReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestSendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestSendReply.Merge(m, src)
}
func (m *ContactRequestSendReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestSendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestSendReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestSendReply proto.InternalMessageInfo

type ContactGetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactGetRequest) Reset()         { *m = ContactGetRequest{} }
func (m *ContactGetRequest) String() string { return proto.CompactTextString(m) }
func (*ContactGetRequest) ProtoMessage()    {}
func (*ContactGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{34}
}
func (m *ContactGetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactGetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactGetRequest.Merge(m, src)
}
func (m *ContactGetRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactGetRequest proto.InternalMessageInfo

type ContactGetReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactGetReply) Reset()         { *m = ContactGetReply{} }
func (m *ContactGetReply) String() string { return proto.CompactTextString(m) }
func (*ContactGetReply) ProtoMessage()    {}
func (*ContactGetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{35}
}
func (m *ContactGetReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactGetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactGetReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactGetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactGetReply.Merge(m, src)
}
func (m *ContactGetReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactGetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactGetReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactGetReply proto.InternalMessageInfo

type StreamManagerRequestToContactRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamManagerRequestToContactRequest) Reset()         { *m = StreamManagerRequestToContactRequest{} }
func (m *StreamManagerRequestToContactRequest) String() string { return proto.CompactTextString(m) }
func (*StreamManagerRequestToContactRequest) ProtoMessage()    {}
func (*StreamManagerRequestToContactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{36}
}
func (m *StreamManagerRequestToContactRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StreamManagerRequestToContactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StreamManagerRequestToContactRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StreamManagerRequestToContactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamManagerRequestToContactRequest.Merge(m, src)
}
func (m *StreamManagerRequestToContactRequest) XXX_Size() int {
	return m.Size()
}
func (m *StreamManagerRequestToContactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamManagerRequestToContactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamManagerRequestToContactRequest proto.InternalMessageInfo

type StreamManagerRequestToContactReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamManagerRequestToContactReply) Reset()         { *m = StreamManagerRequestToContactReply{} }
func (m *StreamManagerRequestToContactReply) String() string { return proto.CompactTextString(m) }
func (*StreamManagerRequestToContactReply) ProtoMessage()    {}
func (*StreamManagerRequestToContactReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{37}
}
func (m *StreamManagerRequestToContactReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StreamManagerRequestToContactReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StreamManagerRequestToContactReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StreamManagerRequestToContactReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamManagerRequestToContactReply.Merge(m, src)
}
func (m *StreamManagerRequestToContactReply) XXX_Size() int {
	return m.Size()
}
func (m *StreamManagerRequestToContactReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamManagerRequestToContactReply.DiscardUnknown(m)
}

var xxx_messageInfo_StreamManagerRequestToContactReply proto.InternalMessageInfo

type ContactRemoveRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRemoveRequest) Reset()         { *m = ContactRemoveRequest{} }
func (m *ContactRemoveRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRemoveRequest) ProtoMessage()    {}
func (*ContactRemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{38}
}
func (m *ContactRemoveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRemoveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRemoveRequest.Merge(m, src)
}
func (m *ContactRemoveRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactRemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRemoveRequest proto.InternalMessageInfo

type ContactRemoveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRemoveReply) Reset()         { *m = ContactRemoveReply{} }
func (m *ContactRemoveReply) String() string { return proto.CompactTextString(m) }
func (*ContactRemoveReply) ProtoMessage()    {}
func (*ContactRemoveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{39}
}
func (m *ContactRemoveReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRemoveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRemoveReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRemoveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRemoveReply.Merge(m, src)
}
func (m *ContactRemoveReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactRemoveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRemoveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRemoveReply proto.InternalMessageInfo

type ContactListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactListRequest) Reset()         { *m = ContactListRequest{} }
func (m *ContactListRequest) String() string { return proto.CompactTextString(m) }
func (*ContactListRequest) ProtoMessage()    {}
func (*ContactListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{40}
}
func (m *ContactListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactListRequest.Merge(m, src)
}
func (m *ContactListRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContactListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactListRequest proto.InternalMessageInfo

type ContactListReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactListReply) Reset()         { *m = ContactListReply{} }
func (m *ContactListReply) String() string { return proto.CompactTextString(m) }
func (*ContactListReply) ProtoMessage()    {}
func (*ContactListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{41}
}
func (m *ContactListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactListReply.Merge(m, src)
}
func (m *ContactListReply) XXX_Size() int {
	return m.Size()
}
func (m *ContactListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactListReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactListReply proto.InternalMessageInfo

type StreamManagerAcceptRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamManagerAcceptRequest) Reset()         { *m = StreamManagerAcceptRequest{} }
func (m *StreamManagerAcceptRequest) String() string { return proto.CompactTextString(m) }
func (*StreamManagerAcceptRequest) ProtoMessage()    {}
func (*StreamManagerAcceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{42}
}
func (m *StreamManagerAcceptRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StreamManagerAcceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StreamManagerAcceptRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StreamManagerAcceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamManagerAcceptRequest.Merge(m, src)
}
func (m *StreamManagerAcceptRequest) XXX_Size() int {
	return m.Size()
}
func (m *StreamManagerAcceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamManagerAcceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamManagerAcceptRequest proto.InternalMessageInfo

type StreamManagerAcceptReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamManagerAcceptReply) Reset()         { *m = StreamManagerAcceptReply{} }
func (m *StreamManagerAcceptReply) String() string { return proto.CompactTextString(m) }
func (*StreamManagerAcceptReply) ProtoMessage()    {}
func (*StreamManagerAcceptReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{43}
}
func (m *StreamManagerAcceptReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StreamManagerAcceptReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StreamManagerAcceptReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StreamManagerAcceptReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamManagerAcceptReply.Merge(m, src)
}
func (m *StreamManagerAcceptReply) XXX_Size() int {
	return m.Size()
}
func (m *StreamManagerAcceptReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamManagerAcceptReply.DiscardUnknown(m)
}

var xxx_messageInfo_StreamManagerAcceptReply proto.InternalMessageInfo

type GroupCreateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupCreateRequest) Reset()         { *m = GroupCreateRequest{} }
func (m *GroupCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupCreateRequest) ProtoMessage()    {}
func (*GroupCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{44}
}
func (m *GroupCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupCreateRequest.Merge(m, src)
}
func (m *GroupCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupCreateRequest proto.InternalMessageInfo

type GroupCreateReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupCreateReply) Reset()         { *m = GroupCreateReply{} }
func (m *GroupCreateReply) String() string { return proto.CompactTextString(m) }
func (*GroupCreateReply) ProtoMessage()    {}
func (*GroupCreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{45}
}
func (m *GroupCreateReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupCreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupCreateReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupCreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupCreateReply.Merge(m, src)
}
func (m *GroupCreateReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupCreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupCreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupCreateReply proto.InternalMessageInfo

type GroupGenerateInviteLinkRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupGenerateInviteLinkRequest) Reset()         { *m = GroupGenerateInviteLinkRequest{} }
func (m *GroupGenerateInviteLinkRequest) String() string { return proto.CompactTextString(m) }
func (*GroupGenerateInviteLinkRequest) ProtoMessage()    {}
func (*GroupGenerateInviteLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{46}
}
func (m *GroupGenerateInviteLinkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupGenerateInviteLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupGenerateInviteLinkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupGenerateInviteLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupGenerateInviteLinkRequest.Merge(m, src)
}
func (m *GroupGenerateInviteLinkRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupGenerateInviteLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupGenerateInviteLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupGenerateInviteLinkRequest proto.InternalMessageInfo

type GroupGenerateInviteLinkReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupGenerateInviteLinkReply) Reset()         { *m = GroupGenerateInviteLinkReply{} }
func (m *GroupGenerateInviteLinkReply) String() string { return proto.CompactTextString(m) }
func (*GroupGenerateInviteLinkReply) ProtoMessage()    {}
func (*GroupGenerateInviteLinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{47}
}
func (m *GroupGenerateInviteLinkReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupGenerateInviteLinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupGenerateInviteLinkReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupGenerateInviteLinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupGenerateInviteLinkReply.Merge(m, src)
}
func (m *GroupGenerateInviteLinkReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupGenerateInviteLinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupGenerateInviteLinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupGenerateInviteLinkReply proto.InternalMessageInfo

type GroupLeaveRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupLeaveRequest) Reset()         { *m = GroupLeaveRequest{} }
func (m *GroupLeaveRequest) String() string { return proto.CompactTextString(m) }
func (*GroupLeaveRequest) ProtoMessage()    {}
func (*GroupLeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{48}
}
func (m *GroupLeaveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupLeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupLeaveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupLeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupLeaveRequest.Merge(m, src)
}
func (m *GroupLeaveRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupLeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupLeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupLeaveRequest proto.InternalMessageInfo

type GroupLeaveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupLeaveReply) Reset()         { *m = GroupLeaveReply{} }
func (m *GroupLeaveReply) String() string { return proto.CompactTextString(m) }
func (*GroupLeaveReply) ProtoMessage()    {}
func (*GroupLeaveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{49}
}
func (m *GroupLeaveReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupLeaveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupLeaveReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupLeaveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupLeaveReply.Merge(m, src)
}
func (m *GroupLeaveReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupLeaveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupLeaveReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupLeaveReply proto.InternalMessageInfo

type GroupListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupListRequest) Reset()         { *m = GroupListRequest{} }
func (m *GroupListRequest) String() string { return proto.CompactTextString(m) }
func (*GroupListRequest) ProtoMessage()    {}
func (*GroupListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{50}
}
func (m *GroupListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupListRequest.Merge(m, src)
}
func (m *GroupListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupListRequest proto.InternalMessageInfo

type GroupListReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupListReply) Reset()         { *m = GroupListReply{} }
func (m *GroupListReply) String() string { return proto.CompactTextString(m) }
func (*GroupListReply) ProtoMessage()    {}
func (*GroupListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{51}
}
func (m *GroupListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupListReply.Merge(m, src)
}
func (m *GroupListReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupListReply proto.InternalMessageInfo

type GroupMessageCreateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupMessageCreateRequest) Reset()         { *m = GroupMessageCreateRequest{} }
func (m *GroupMessageCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupMessageCreateRequest) ProtoMessage()    {}
func (*GroupMessageCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{52}
}
func (m *GroupMessageCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupMessageCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupMessageCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupMessageCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMessageCreateRequest.Merge(m, src)
}
func (m *GroupMessageCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupMessageCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMessageCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMessageCreateRequest proto.InternalMessageInfo

type GroupMessageCreateReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupMessageCreateReply) Reset()         { *m = GroupMessageCreateReply{} }
func (m *GroupMessageCreateReply) String() string { return proto.CompactTextString(m) }
func (*GroupMessageCreateReply) ProtoMessage()    {}
func (*GroupMessageCreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{53}
}
func (m *GroupMessageCreateReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupMessageCreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupMessageCreateReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupMessageCreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMessageCreateReply.Merge(m, src)
}
func (m *GroupMessageCreateReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupMessageCreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMessageCreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMessageCreateReply proto.InternalMessageInfo

type GroupMessageListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupMessageListRequest) Reset()         { *m = GroupMessageListRequest{} }
func (m *GroupMessageListRequest) String() string { return proto.CompactTextString(m) }
func (*GroupMessageListRequest) ProtoMessage()    {}
func (*GroupMessageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{54}
}
func (m *GroupMessageListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupMessageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupMessageListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupMessageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMessageListRequest.Merge(m, src)
}
func (m *GroupMessageListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupMessageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMessageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMessageListRequest proto.InternalMessageInfo

type GroupMessageListReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupMessageListReply) Reset()         { *m = GroupMessageListReply{} }
func (m *GroupMessageListReply) String() string { return proto.CompactTextString(m) }
func (*GroupMessageListReply) ProtoMessage()    {}
func (*GroupMessageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{55}
}
func (m *GroupMessageListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupMessageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupMessageListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupMessageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMessageListReply.Merge(m, src)
}
func (m *GroupMessageListReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupMessageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMessageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMessageListReply proto.InternalMessageInfo

type GroupInvitationAcceptRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationAcceptRequest) Reset()         { *m = GroupInvitationAcceptRequest{} }
func (m *GroupInvitationAcceptRequest) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationAcceptRequest) ProtoMessage()    {}
func (*GroupInvitationAcceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{56}
}
func (m *GroupInvitationAcceptRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationAcceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationAcceptRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationAcceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationAcceptRequest.Merge(m, src)
}
func (m *GroupInvitationAcceptRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationAcceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationAcceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationAcceptRequest proto.InternalMessageInfo

type GroupInvitationAcceptReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationAcceptReply) Reset()         { *m = GroupInvitationAcceptReply{} }
func (m *GroupInvitationAcceptReply) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationAcceptReply) ProtoMessage()    {}
func (*GroupInvitationAcceptReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{57}
}
func (m *GroupInvitationAcceptReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationAcceptReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationAcceptReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationAcceptReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationAcceptReply.Merge(m, src)
}
func (m *GroupInvitationAcceptReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationAcceptReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationAcceptReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationAcceptReply proto.InternalMessageInfo

type GroupInvitationCreateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationCreateRequest) Reset()         { *m = GroupInvitationCreateRequest{} }
func (m *GroupInvitationCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationCreateRequest) ProtoMessage()    {}
func (*GroupInvitationCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{58}
}
func (m *GroupInvitationCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationCreateRequest.Merge(m, src)
}
func (m *GroupInvitationCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationCreateRequest proto.InternalMessageInfo

type GroupInvitationCreateReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationCreateReply) Reset()         { *m = GroupInvitationCreateReply{} }
func (m *GroupInvitationCreateReply) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationCreateReply) ProtoMessage()    {}
func (*GroupInvitationCreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{59}
}
func (m *GroupInvitationCreateReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationCreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationCreateReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationCreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationCreateReply.Merge(m, src)
}
func (m *GroupInvitationCreateReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationCreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationCreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationCreateReply proto.InternalMessageInfo

type GroupInvitationDiscardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationDiscardRequest) Reset()         { *m = GroupInvitationDiscardRequest{} }
func (m *GroupInvitationDiscardRequest) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationDiscardRequest) ProtoMessage()    {}
func (*GroupInvitationDiscardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{60}
}
func (m *GroupInvitationDiscardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationDiscardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationDiscardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationDiscardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationDiscardRequest.Merge(m, src)
}
func (m *GroupInvitationDiscardRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationDiscardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationDiscardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationDiscardRequest proto.InternalMessageInfo

type GroupInvitationDiscardReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationDiscardReply) Reset()         { *m = GroupInvitationDiscardReply{} }
func (m *GroupInvitationDiscardReply) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationDiscardReply) ProtoMessage()    {}
func (*GroupInvitationDiscardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{61}
}
func (m *GroupInvitationDiscardReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationDiscardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationDiscardReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationDiscardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationDiscardReply.Merge(m, src)
}
func (m *GroupInvitationDiscardReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationDiscardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationDiscardReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationDiscardReply proto.InternalMessageInfo

type GroupInvitationListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationListRequest) Reset()         { *m = GroupInvitationListRequest{} }
func (m *GroupInvitationListRequest) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationListRequest) ProtoMessage()    {}
func (*GroupInvitationListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{62}
}
func (m *GroupInvitationListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationListRequest.Merge(m, src)
}
func (m *GroupInvitationListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationListRequest proto.InternalMessageInfo

type GroupInvitationListReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInvitationListReply) Reset()         { *m = GroupInvitationListReply{} }
func (m *GroupInvitationListReply) String() string { return proto.CompactTextString(m) }
func (*GroupInvitationListReply) ProtoMessage()    {}
func (*GroupInvitationListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{63}
}
func (m *GroupInvitationListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInvitationListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInvitationListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInvitationListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInvitationListReply.Merge(m, src)
}
func (m *GroupInvitationListReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupInvitationListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInvitationListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInvitationListReply proto.InternalMessageInfo

type GroupPubSubTopicInitRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupPubSubTopicInitRequest) Reset()         { *m = GroupPubSubTopicInitRequest{} }
func (m *GroupPubSubTopicInitRequest) String() string { return proto.CompactTextString(m) }
func (*GroupPubSubTopicInitRequest) ProtoMessage()    {}
func (*GroupPubSubTopicInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{64}
}
func (m *GroupPubSubTopicInitRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupPubSubTopicInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupPubSubTopicInitRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupPubSubTopicInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupPubSubTopicInitRequest.Merge(m, src)
}
func (m *GroupPubSubTopicInitRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupPubSubTopicInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupPubSubTopicInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupPubSubTopicInitRequest proto.InternalMessageInfo

type GroupPubSubTopicInitReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupPubSubTopicInitReply) Reset()         { *m = GroupPubSubTopicInitReply{} }
func (m *GroupPubSubTopicInitReply) String() string { return proto.CompactTextString(m) }
func (*GroupPubSubTopicInitReply) ProtoMessage()    {}
func (*GroupPubSubTopicInitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{65}
}
func (m *GroupPubSubTopicInitReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupPubSubTopicInitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupPubSubTopicInitReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupPubSubTopicInitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupPubSubTopicInitReply.Merge(m, src)
}
func (m *GroupPubSubTopicInitReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupPubSubTopicInitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupPubSubTopicInitReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupPubSubTopicInitReply proto.InternalMessageInfo

type GroupBroadcastSendRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupBroadcastSendRequest) Reset()         { *m = GroupBroadcastSendRequest{} }
func (m *GroupBroadcastSendRequest) String() string { return proto.CompactTextString(m) }
func (*GroupBroadcastSendRequest) ProtoMessage()    {}
func (*GroupBroadcastSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{66}
}
func (m *GroupBroadcastSendRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupBroadcastSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupBroadcastSendRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupBroadcastSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupBroadcastSendRequest.Merge(m, src)
}
func (m *GroupBroadcastSendRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupBroadcastSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupBroadcastSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupBroadcastSendRequest proto.InternalMessageInfo

type GroupBroadcastSendReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupBroadcastSendReply) Reset()         { *m = GroupBroadcastSendReply{} }
func (m *GroupBroadcastSendReply) String() string { return proto.CompactTextString(m) }
func (*GroupBroadcastSendReply) ProtoMessage()    {}
func (*GroupBroadcastSendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{67}
}
func (m *GroupBroadcastSendReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupBroadcastSendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupBroadcastSendReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupBroadcastSendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupBroadcastSendReply.Merge(m, src)
}
func (m *GroupBroadcastSendReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupBroadcastSendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupBroadcastSendReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupBroadcastSendReply proto.InternalMessageInfo

type GroupPubSubTopicSubscribeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupPubSubTopicSubscribeRequest) Reset()         { *m = GroupPubSubTopicSubscribeRequest{} }
func (m *GroupPubSubTopicSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*GroupPubSubTopicSubscribeRequest) ProtoMessage()    {}
func (*GroupPubSubTopicSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{68}
}
func (m *GroupPubSubTopicSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupPubSubTopicSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupPubSubTopicSubscribeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupPubSubTopicSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupPubSubTopicSubscribeRequest.Merge(m, src)
}
func (m *GroupPubSubTopicSubscribeRequest) XXX_Size() int {
	return m.Size()
}
func (m *GroupPubSubTopicSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupPubSubTopicSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupPubSubTopicSubscribeRequest proto.InternalMessageInfo

type GroupPubSubTopicSubscribeReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupPubSubTopicSubscribeReply) Reset()         { *m = GroupPubSubTopicSubscribeReply{} }
func (m *GroupPubSubTopicSubscribeReply) String() string { return proto.CompactTextString(m) }
func (*GroupPubSubTopicSubscribeReply) ProtoMessage()    {}
func (*GroupPubSubTopicSubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_047e04c733cf8554, []int{69}
}
func (m *GroupPubSubTopicSubscribeReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupPubSubTopicSubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupPubSubTopicSubscribeReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupPubSubTopicSubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupPubSubTopicSubscribeReply.Merge(m, src)
}
func (m *GroupPubSubTopicSubscribeReply) XXX_Size() int {
	return m.Size()
}
func (m *GroupPubSubTopicSubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupPubSubTopicSubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupPubSubTopicSubscribeReply proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("Contact_ContactStatus", Contact_ContactStatus_name, Contact_ContactStatus_value)
	proto.RegisterType((*SigChainEntry)(nil), "SigChainEntry")
	proto.RegisterType((*SigChain)(nil), "SigChain")
	proto.RegisterType((*Contact)(nil), "Contact")
	proto.RegisterType((*AccountConfig)(nil), "AccountConfig")
	proto.RegisterType((*DeviceConfig)(nil), "DeviceConfig")
	proto.RegisterType((*Device)(nil), "Device")
	proto.RegisterType((*EventSubscribeRequest)(nil), "EventSubscribeRequest")
	proto.RegisterType((*EventStream)(nil), "EventStream")
	proto.RegisterType((*CurrentDeviceExportDataRequest)(nil), "CurrentDeviceExportDataRequest")
	proto.RegisterType((*CurrentDeviceExportDataReply)(nil), "CurrentDeviceExportDataReply")
	proto.RegisterType((*AccountGetInformationRequest)(nil), "AccountGetInformationRequest")
	proto.RegisterType((*AccountGetInformationReply)(nil), "AccountGetInformationReply")
	proto.RegisterType((*CurrentDeviceGetConfigurationRequest)(nil), "CurrentDeviceGetConfigurationRequest")
	proto.RegisterType((*CurrentDeviceGetConfigurationReply)(nil), "CurrentDeviceGetConfigurationReply")
	proto.RegisterType((*AccountGetConfigurationRequest)(nil), "AccountGetConfigurationRequest")
	proto.RegisterType((*AccountGetConfigurationReply)(nil), "AccountGetConfigurationReply")
	proto.RegisterType((*AccountLinkNewDeviceRequest)(nil), "AccountLinkNewDeviceRequest")
	proto.RegisterType((*AccountLinkNewDeviceReply)(nil), "AccountLinkNewDeviceReply")
	proto.RegisterType((*AccountDisableIncomingContactRequestRequest)(nil), "AccountDisableIncomingContactRequestRequest")
	proto.RegisterType((*AccountDisableIncomingContactRequestReply)(nil), "AccountDisableIncomingContactRequestReply")
	proto.RegisterType((*AccountEnableIncomingContactRequestRequest)(nil), "AccountEnableIncomingContactRequestRequest")
	proto.RegisterType((*AccountEnableIncomingContactRequestReply)(nil), "AccountEnableIncomingContactRequestReply")
	proto.RegisterType((*AccountResetIncomingContactRequestLinkRequest)(nil), "AccountResetIncomingContactRequestLinkRequest")
	proto.RegisterType((*AccountResetIncomingContactRequestLinkReply)(nil), "AccountResetIncomingContactRequestLinkReply")
	proto.RegisterType((*ContactRequestAcceptRequest)(nil), "ContactRequestAcceptRequest")
	proto.RegisterType((*ContactRequestAcceptReply)(nil), "ContactRequestAcceptReply")
	proto.RegisterType((*ContactRequestDiscardRequest)(nil), "ContactRequestDiscardRequest")
	proto.RegisterType((*ContactRequestDiscardReply)(nil), "ContactRequestDiscardReply")
	proto.RegisterType((*ContactRequestListIncomingRequest)(nil), "ContactRequestListIncomingRequest")
	proto.RegisterType((*ContactRequestListIncomingReply)(nil), "ContactRequestListIncomingReply")
	proto.RegisterType((*ContactRequestListOutgoingRequest)(nil), "ContactRequestListOutgoingRequest")
	proto.RegisterType((*ContactRequestListOutgoingReply)(nil), "ContactRequestListOutgoingReply")
	proto.RegisterType((*ContactRequestSendRequest)(nil), "ContactRequestSendRequest")
	proto.RegisterType((*ContactRequestSendReply)(nil), "ContactRequestSendReply")
	proto.RegisterType((*ContactGetRequest)(nil), "ContactGetRequest")
	proto.RegisterType((*ContactGetReply)(nil), "ContactGetReply")
	proto.RegisterType((*StreamManagerRequestToContactRequest)(nil), "StreamManagerRequestToContactRequest")
	proto.RegisterType((*StreamManagerRequestToContactReply)(nil), "StreamManagerRequestToContactReply")
	proto.RegisterType((*ContactRemoveRequest)(nil), "ContactRemoveRequest")
	proto.RegisterType((*ContactRemoveReply)(nil), "ContactRemoveReply")
	proto.RegisterType((*ContactListRequest)(nil), "ContactListRequest")
	proto.RegisterType((*ContactListReply)(nil), "ContactListReply")
	proto.RegisterType((*StreamManagerAcceptRequest)(nil), "StreamManagerAcceptRequest")
	proto.RegisterType((*StreamManagerAcceptReply)(nil), "StreamManagerAcceptReply")
	proto.RegisterType((*GroupCreateRequest)(nil), "GroupCreateRequest")
	proto.RegisterType((*GroupCreateReply)(nil), "GroupCreateReply")
	proto.RegisterType((*GroupGenerateInviteLinkRequest)(nil), "GroupGenerateInviteLinkRequest")
	proto.RegisterType((*GroupGenerateInviteLinkReply)(nil), "GroupGenerateInviteLinkReply")
	proto.RegisterType((*GroupLeaveRequest)(nil), "GroupLeaveRequest")
	proto.RegisterType((*GroupLeaveReply)(nil), "GroupLeaveReply")
	proto.RegisterType((*GroupListRequest)(nil), "GroupListRequest")
	proto.RegisterType((*GroupListReply)(nil), "GroupListReply")
	proto.RegisterType((*GroupMessageCreateRequest)(nil), "GroupMessageCreateRequest")
	proto.RegisterType((*GroupMessageCreateReply)(nil), "GroupMessageCreateReply")
	proto.RegisterType((*GroupMessageListRequest)(nil), "GroupMessageListRequest")
	proto.RegisterType((*GroupMessageListReply)(nil), "GroupMessageListReply")
	proto.RegisterType((*GroupInvitationAcceptRequest)(nil), "GroupInvitationAcceptRequest")
	proto.RegisterType((*GroupInvitationAcceptReply)(nil), "GroupInvitationAcceptReply")
	proto.RegisterType((*GroupInvitationCreateRequest)(nil), "GroupInvitationCreateRequest")
	proto.RegisterType((*GroupInvitationCreateReply)(nil), "GroupInvitationCreateReply")
	proto.RegisterType((*GroupInvitationDiscardRequest)(nil), "GroupInvitationDiscardRequest")
	proto.RegisterType((*GroupInvitationDiscardReply)(nil), "GroupInvitationDiscardReply")
	proto.RegisterType((*GroupInvitationListRequest)(nil), "GroupInvitationListRequest")
	proto.RegisterType((*GroupInvitationListReply)(nil), "GroupInvitationListReply")
	proto.RegisterType((*GroupPubSubTopicInitRequest)(nil), "GroupPubSubTopicInitRequest")
	proto.RegisterType((*GroupPubSubTopicInitReply)(nil), "GroupPubSubTopicInitReply")
	proto.RegisterType((*GroupBroadcastSendRequest)(nil), "GroupBroadcastSendRequest")
	proto.RegisterType((*GroupBroadcastSendReply)(nil), "GroupBroadcastSendReply")
	proto.RegisterType((*GroupPubSubTopicSubscribeRequest)(nil), "GroupPubSubTopicSubscribeRequest")
	proto.RegisterType((*GroupPubSubTopicSubscribeReply)(nil), "GroupPubSubTopicSubscribeReply")
}

func init() { proto.RegisterFile("bertyprotocol.proto", fileDescriptor_047e04c733cf8554) }

var fileDescriptor_047e04c733cf8554 = []byte{
	// 1564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x98, 0xcd, 0x6e, 0x1b, 0xc9,
	0x11, 0xc7, 0x3d, 0x92, 0x2d, 0x4b, 0x25, 0x92, 0xa2, 0x8a, 0xfa, 0xa0, 0x9a, 0x1f, 0xa2, 0x29,
	0x59, 0xa0, 0xbf, 0x5a, 0x34, 0x93, 0x20, 0x06, 0x82, 0x1c, 0x6c, 0x49, 0x51, 0x94, 0xd8, 0xb1,
	0x42, 0x3a, 0x06, 0x92, 0x8b, 0x30, 0x1c, 0xb6, 0xe8, 0x81, 0xa8, 0x19, 0x66, 0xa6, 0x47, 0x8e,
	0x02, 0x04, 0xc8, 0x29, 0xcf, 0x90, 0xcb, 0xbe, 0xc8, 0x3e, 0xc1, 0xde, 0x76, 0xb1, 0xc0, 0xee,
	0x5e, 0x17, 0xde, 0xe3, 0xbe, 0xc4, 0xa2, 0x67, 0x7a, 0xc8, 0xf9, 0x26, 0x7d, 0x32, 0xbb, 0xff,
	0x55, 0xd5, 0x5d, 0xdd, 0x35, 0x5d, 0x3f, 0x0b, 0x4a, 0x7d, 0x66, 0xf1, 0xdb, 0xb1, 0x65, 0x72,
	0x53, 0x33, 0x47, 0xd4, 0xfd, 0x41, 0x1a, 0x43, 0xd3, 0x1c, 0x8e, 0xd8, 0xa1, 0x3b, 0xea, 0x3b,
	0x97, 0x87, 0x03, 0x66, 0x6b, 0x96, 0x3e, 0xe6, 0xa6, 0xe5, 0x59, 0x34, 0xd7, 0x20, 0xdf, 0xd3,
	0x87, 0x47, 0x1f, 0x54, 0xdd, 0x38, 0x31, 0xb8, 0x75, 0xdb, 0xfc, 0x35, 0x2c, 0xfb, 0x13, 0xd8,
	0x82, 0xfb, 0xcc, 0xe0, 0x96, 0xce, 0xec, 0xb2, 0xd2, 0x58, 0x6c, 0xad, 0x76, 0x0a, 0x34, 0x64,
	0xdc, 0xf5, 0xe5, 0xe6, 0x77, 0x0b, 0x70, 0xff, 0xc8, 0x34, 0xb8, 0xaa, 0x71, 0x3c, 0x80, 0x15,
	0x5b, 0x1f, 0x5e, 0x68, 0xc2, 0xac, 0xac, 0x34, 0x94, 0xd6, 0x6a, 0x67, 0x65, 0xe2, 0xd7, 0x5d,
	0xb6, 0xfd, 0xe8, 0x04, 0x96, 0xaf, 0x19, 0x57, 0x07, 0x2a, 0x57, 0xcb, 0x0b, 0x0d, 0xa5, 0x95,
	0xeb, 0x4e, 0xc6, 0xd8, 0x81, 0x4d, 0x8b, 0x19, 0x03, 0xf6, 0xef, 0x1b, 0xd3, 0xb1, 0x2f, 0xc6,
	0xa6, 0x6e, 0xf0, 0x0b, 0x9b, 0xb1, 0x41, 0x79, 0xd1, 0x35, 0x2c, 0x4d, 0xc5, 0x73, 0xa1, 0xf5,
	0x18, 0x1b, 0xe0, 0x1e, 0xe4, 0xed, 0x0f, 0xaa, 0xc5, 0x06, 0x17, 0x36, 0xd3, 0x2c, 0xc6, 0xcb,
	0x77, 0x5d, 0xdb, 0x9c, 0x37, 0xd9, 0x73, 0xe7, 0xf0, 0xf7, 0x50, 0xd0, 0xbc, 0x7d, 0x5e, 0xd8,
	0x5c, 0xe5, 0x8e, 0x5d, 0xbe, 0xd7, 0x50, 0x5a, 0x85, 0xce, 0x16, 0x95, 0xdb, 0xf7, 0xff, 0xed,
	0xb9, 0x6a, 0x37, 0xaf, 0x05, 0x87, 0x4d, 0x03, 0xf2, 0x21, 0x1d, 0x57, 0xe1, 0xfe, 0xdf, 0x8c,
	0x2b, 0xc3, 0xfc, 0x68, 0x14, 0xef, 0x20, 0xc0, 0xd2, 0x9b, 0x5b, 0x9b, 0x8d, 0x2e, 0x8b, 0x8a,
	0x10, 0xa4, 0x65, 0x71, 0x41, 0x0c, 0xde, 0x59, 0x8e, 0xcd, 0xd9, 0xa0, 0xb8, 0x28, 0x06, 0xaf,
	0x46, 0xa6, 0x76, 0xc5, 0x06, 0xc5, 0xbb, 0x98, 0x87, 0x95, 0x2e, 0xfb, 0xa7, 0xc3, 0x6c, 0x7e,
	0x66, 0x14, 0xef, 0x61, 0x01, 0x40, 0x0e, 0xdf, 0x3a, 0xbc, 0xb8, 0xd4, 0x3c, 0x83, 0xfc, 0x4b,
	0x4d, 0x33, 0x1d, 0x83, 0x1f, 0x99, 0xc6, 0xa5, 0x3e, 0xc4, 0x17, 0x50, 0x8e, 0x1d, 0x0c, 0x33,
	0xd4, 0xfe, 0x88, 0x0d, 0xdc, 0xb3, 0x5e, 0xee, 0x6e, 0x45, 0xce, 0xe6, 0xc4, 0x53, 0x9b, 0x05,
	0xc8, 0x1d, 0xb3, 0x1b, 0x5d, 0x63, 0x5e, 0xa4, 0xe6, 0x7b, 0x58, 0xf2, 0xc6, 0xb8, 0x0f, 0x85,
	0x81, 0xfb, 0xeb, 0x62, 0xec, 0xf4, 0x2f, 0xae, 0xd8, 0xad, 0x1b, 0x29, 0xd7, 0xcd, 0x79, 0xb3,
	0xe7, 0x4e, 0xff, 0xcf, 0xec, 0x16, 0x0f, 0x60, 0x4d, 0xf5, 0xb6, 0x32, 0x31, 0xf3, 0x6e, 0x2d,
	0x2f, 0xa7, 0x3d, 0xbb, 0xe6, 0x36, 0x6c, 0x9e, 0xdc, 0x30, 0x83, 0xf7, 0x9c, 0xbe, 0xa8, 0xb5,
	0x3e, 0x93, 0x09, 0x35, 0xf3, 0xb0, 0xea, 0x09, 0xdc, 0x62, 0xea, 0x75, 0xb3, 0x01, 0xf5, 0x23,
	0xc7, 0xb2, 0x98, 0xc1, 0xbd, 0x6d, 0x9c, 0xfc, 0x6b, 0x6c, 0x5a, 0xfc, 0x58, 0xe5, 0xaa, 0xef,
	0x50, 0x87, 0x6a, 0xaa, 0xc5, 0x78, 0x74, 0x2b, 0x74, 0x79, 0x38, 0xa7, 0x8c, 0x9f, 0x19, 0x97,
	0xa6, 0x75, 0xad, 0x72, 0xdd, 0x34, 0x7c, 0xff, 0x2a, 0x90, 0x14, 0x5d, 0x78, 0x1f, 0xc0, 0x7e,
	0x28, 0xfa, 0x29, 0x93, 0x67, 0xec, 0x58, 0xa1, 0x28, 0xfb, 0xd0, 0x9c, 0x61, 0x27, 0xa2, 0x35,
	0xa0, 0x3e, 0x5d, 0x2b, 0x31, 0x4e, 0x68, 0xb7, 0x09, 0x11, 0x6a, 0x50, 0x91, 0xfa, 0x6b, 0xdd,
	0xb8, 0xfa, 0x0b, 0xfb, 0xe8, 0x2d, 0xe7, 0xbb, 0x57, 0x60, 0x27, 0x59, 0x16, 0xbe, 0xcf, 0xe0,
	0x89, 0x14, 0x8f, 0x75, 0x5b, 0x5c, 0xf7, 0x99, 0xa1, 0x99, 0xd7, 0xba, 0x31, 0x94, 0x25, 0x28,
	0x83, 0xf8, 0xb1, 0x9e, 0xc0, 0xa3, 0xf9, 0xcc, 0x45, 0xec, 0xa7, 0xf0, 0x58, 0x1a, 0x7b, 0x95,
	0x94, 0x1d, 0xfa, 0x31, 0xb4, 0xe6, 0xb2, 0x16, 0x91, 0x0f, 0xe1, 0x99, 0xb4, 0xed, 0x32, 0x5b,
	0xdc, 0x50, 0x92, 0xa9, 0xc8, 0xd6, 0x0f, 0x3e, 0x4d, 0x73, 0xa6, 0x83, 0x3c, 0xd1, 0xb0, 0xf4,
	0x52, 0xd3, 0xd8, 0x98, 0x07, 0x4e, 0x34, 0x59, 0x96, 0xb5, 0x15, 0x16, 0x8f, 0x75, 0x5b, 0x53,
	0xad, 0x41, 0xa0, 0xb6, 0x52, 0x74, 0xe1, 0xbd, 0x07, 0x0f, 0xa2, 0x9b, 0xb2, 0x27, 0xdb, 0xf5,
	0x43, 0x3c, 0x80, 0xdd, 0x2c, 0xa3, 0xd4, 0x38, 0x6f, 0x1d, 0x3e, 0x34, 0x67, 0xc5, 0x99, 0x1a,
	0x89, 0x38, 0xb1, 0x54, 0x7b, 0xcc, 0x98, 0xa4, 0xb2, 0x03, 0xdb, 0x49, 0xa2, 0xf0, 0x2b, 0xc1,
	0xba, 0x94, 0x4e, 0xd9, 0xe4, 0xdc, 0xd6, 0x61, 0x2d, 0x38, 0x29, 0xbf, 0x25, 0xef, 0xab, 0x7e,
	0xa3, 0x1a, 0xea, 0x90, 0x59, 0xd2, 0xf4, 0x9d, 0x19, 0x0e, 0x2c, 0xbe, 0xa5, 0x19, 0x76, 0x22,
	0xda, 0x16, 0x6c, 0x4c, 0xc6, 0xd7, 0xe6, 0xcd, 0xe4, 0x13, 0xd8, 0x00, 0x8c, 0xcc, 0x0b, 0xeb,
	0xe9, 0xac, 0xc8, 0xdb, 0xb7, 0x45, 0x28, 0x86, 0x66, 0x85, 0x65, 0x15, 0x48, 0x68, 0xf5, 0x70,
	0x39, 0x10, 0x28, 0x27, 0xaa, 0x72, 0x8d, 0x53, 0xcb, 0x74, 0xc6, 0x47, 0x16, 0x53, 0x39, 0x0b,
	0xac, 0x11, 0x9a, 0x95, 0xef, 0x80, 0x3b, 0x77, 0xca, 0x0c, 0x66, 0xa9, 0x9c, 0x9d, 0x19, 0x37,
	0x3a, 0x67, 0xc1, 0x22, 0xae, 0x43, 0x35, 0xd5, 0x42, 0x9e, 0xb9, 0xab, 0xbf, 0x66, 0xea, 0x34,
	0xf5, 0x75, 0x58, 0x0b, 0x4e, 0x0a, 0x3b, 0x7f, 0xf5, 0x60, 0xd6, 0x45, 0x28, 0x04, 0xe6, 0xe4,
	0xcd, 0xbb, 0x33, 0x6f, 0x98, 0x6d, 0xab, 0x43, 0x16, 0x4e, 0x60, 0x07, 0xb6, 0x93, 0x44, 0xe1,
	0x17, 0x91, 0x82, 0x8b, 0x6c, 0xc3, 0x66, 0x5c, 0x92, 0xdf, 0x8c, 0x2b, 0xb8, 0x19, 0xb9, 0x2f,
	0x5b, 0xf8, 0x84, 0xab, 0x40, 0x52, 0xf4, 0x64, 0xef, 0xf0, 0x66, 0xe3, 0xde, 0xc1, 0xfd, 0xee,
	0x42, 0x2d, 0xa2, 0x46, 0x3e, 0xd8, 0x1a, 0x54, 0xd2, 0x0c, 0x64, 0x6d, 0x44, 0xe4, 0x60, 0xca,
	0x04, 0xca, 0x89, 0xaa, 0x7c, 0x65, 0x5c, 0xed, 0xdc, 0xe9, 0xf7, 0x9c, 0xfe, 0x3b, 0x73, 0xac,
	0x6b, 0x67, 0x86, 0x1e, 0x7c, 0x65, 0x92, 0xe5, 0xe0, 0xed, 0xbc, 0xb2, 0x4c, 0x75, 0xa0, 0xa9,
	0xb1, 0xef, 0x32, 0x49, 0x14, 0x7e, 0x4d, 0x68, 0x44, 0x83, 0xc6, 0xda, 0xad, 0x5f, 0x89, 0xc9,
	0x36, 0xe3, 0xd1, 0x6d, 0xe7, 0x07, 0x05, 0xf2, 0x47, 0x23, 0x9d, 0x19, 0x5c, 0x96, 0x3c, 0xfe,
	0x1d, 0xb6, 0x53, 0x3a, 0x2e, 0xee, 0xd2, 0xec, 0x6e, 0x4d, 0x6a, 0x34, 0xab, 0x59, 0xe3, 0x15,
	0xd4, 0x32, 0xdb, 0x28, 0x3e, 0xa4, 0xf3, 0xb4, 0x63, 0xb2, 0x47, 0x67, 0x77, 0xe3, 0xce, 0x17,
	0xf7, 0xa0, 0x20, 0x3b, 0x45, 0x20, 0xb5, 0x94, 0xf6, 0x8b, 0xbb, 0x34, 0xbb, 0x75, 0x93, 0x1a,
	0xcd, 0xea, 0xdc, 0xd8, 0x83, 0xcd, 0x44, 0xce, 0xc0, 0xa0, 0x5f, 0x9c, 0x4f, 0x48, 0x85, 0xa6,
	0xe3, 0x09, 0x9e, 0xc3, 0x46, 0x52, 0xbf, 0xc7, 0x2a, 0xcd, 0xa0, 0x04, 0x42, 0x68, 0x2a, 0x24,
	0xe0, 0x7f, 0x15, 0xd8, 0x9f, 0xa7, 0xed, 0xe3, 0x53, 0xfa, 0x19, 0x30, 0x41, 0x1e, 0xd3, 0xb9,
	0x59, 0x02, 0xff, 0x03, 0x7b, 0x73, 0xd0, 0x01, 0x3e, 0xa1, 0xf3, 0x13, 0x07, 0x79, 0x44, 0xe7,
	0x05, 0x0e, 0xfc, 0x9f, 0x02, 0x07, 0xf3, 0x01, 0x04, 0x52, 0xfa, 0x59, 0x68, 0x42, 0x9e, 0xd2,
	0xcf, 0x20, 0x93, 0xce, 0x1f, 0x21, 0xe7, 0xa2, 0xb0, 0x5f, 0x9c, 0x2f, 0xa0, 0x10, 0x66, 0x66,
	0xdc, 0xa2, 0x89, 0x10, 0x4d, 0x72, 0x34, 0xc0, 0xd0, 0x6d, 0xa5, 0xf3, 0xfd, 0x22, 0x6c, 0x86,
	0x57, 0xf1, 0x63, 0x9e, 0x07, 0xba, 0x68, 0x00, 0x6f, 0xb0, 0x4a, 0x33, 0xa0, 0x88, 0x10, 0x9a,
	0xca, 0x44, 0xa2, 0xce, 0x13, 0x99, 0x07, 0x6b, 0x34, 0x8b, 0x95, 0x48, 0x85, 0xa6, 0xa3, 0x12,
	0x0e, 0xa2, 0x20, 0x15, 0xa4, 0x20, 0x6c, 0xd2, 0x99, 0x1c, 0x45, 0x1a, 0x74, 0x06, 0x46, 0xb5,
	0x95, 0xe4, 0x55, 0x7c, 0x46, 0x4a, 0x5c, 0x25, 0x42, 0x59, 0x89, 0xab, 0x84, 0x20, 0xab, 0xad,
	0xe0, 0x9f, 0x02, 0x80, 0x32, 0x21, 0x29, 0x8c, 0x1e, 0x69, 0xe0, 0x8d, 0x27, 0x65, 0x9a, 0x82,
	0x5e, 0x9d, 0x2f, 0x15, 0x28, 0x48, 0xcd, 0xbf, 0xd1, 0x0e, 0xc0, 0x14, 0xbc, 0x10, 0x69, 0x0c,
	0xcd, 0x48, 0x91, 0x46, 0xc8, 0x0c, 0x7f, 0x0b, 0xab, 0x01, 0x0e, 0xc2, 0x12, 0x8d, 0xb3, 0x12,
	0x59, 0xa7, 0x51, 0x54, 0x6a, 0x2b, 0xf8, 0xbb, 0xc9, 0xff, 0x74, 0x3d, 0xd8, 0xc2, 0x4d, 0x9a,
	0x04, 0x65, 0xa4, 0x44, 0xe3, 0x4c, 0xd6, 0xf9, 0x5a, 0x81, 0x7c, 0x08, 0xa6, 0xc4, 0xf3, 0x9f,
	0x49, 0x7e, 0xf8, 0x90, 0xce, 0x43, 0x90, 0x64, 0x8f, 0xce, 0x06, 0x48, 0xfc, 0x2b, 0x94, 0x12,
	0x50, 0x0e, 0x2b, 0x34, 0x1d, 0xff, 0xc8, 0x0e, 0x4d, 0xa3, 0xbf, 0x96, 0xd2, 0x56, 0x3a, 0xdf,
	0xde, 0x85, 0x9c, 0x47, 0x3d, 0x32, 0xa1, 0xdf, 0xc0, 0x6a, 0x00, 0xfe, 0xb0, 0x44, 0xe3, 0x80,
	0x48, 0xd6, 0x69, 0x94, 0x0f, 0x45, 0x1b, 0x4a, 0xa1, 0x3f, 0xdc, 0xa5, 0xd9, 0xe4, 0x48, 0x6a,
	0x34, 0x0b, 0x1c, 0x45, 0x79, 0x4c, 0x19, 0x11, 0x91, 0xc6, 0x28, 0x92, 0x14, 0x69, 0x04, 0x22,
	0xf1, 0x39, 0xac, 0x4c, 0x80, 0x11, 0xe5, 0x76, 0x83, 0xa5, 0xb1, 0x46, 0xc3, 0x3c, 0xe9, 0x15,
	0x79, 0x1c, 0x1a, 0x91, 0xd0, 0x54, 0xcc, 0x24, 0x65, 0x9a, 0x42, 0x99, 0xf8, 0x07, 0xc9, 0xb0,
	0x01, 0x94, 0xc4, 0xb0, 0x75, 0x70, 0x33, 0x5b, 0x34, 0x91, 0x3b, 0xdb, 0x0a, 0x76, 0x61, 0x23,
	0x09, 0xb2, 0xb0, 0x4a, 0x33, 0xd0, 0x8c, 0x10, 0x9a, 0x4a, 0x66, 0x2d, 0x05, 0xd5, 0x38, 0xb8,
	0x4d, 0x9f, 0xe7, 0x07, 0x74, 0x16, 0x7f, 0x91, 0x5d, 0x9a, 0x8d, 0x5f, 0x6d, 0xa5, 0xf3, 0xf3,
	0x02, 0x6c, 0x45, 0xb8, 0xd2, 0x2f, 0xaf, 0x9e, 0x84, 0xec, 0x28, 0x2b, 0xa3, 0x2c, 0x82, 0x14,
	0xc6, 0x26, 0x15, 0x9a, 0x8e, 0xd8, 0x09, 0x41, 0xe5, 0xed, 0xc5, 0x82, 0x86, 0x2f, 0xb0, 0x42,
	0xd3, 0xc9, 0x1b, 0xdf, 0xc7, 0x72, 0xf0, 0xdb, 0x42, 0x9d, 0x66, 0x22, 0x39, 0xa9, 0xd2, 0x0c,
	0x22, 0xc7, 0xb7, 0x50, 0x4a, 0x60, 0x6e, 0x8c, 0xed, 0x25, 0x58, 0x21, 0x3b, 0x34, 0x0d, 0xd3,
	0xdb, 0xca, 0xab, 0xe7, 0x5f, 0x7d, 0xaa, 0x2b, 0xdf, 0x7c, 0xaa, 0x2b, 0x3f, 0x7e, 0xaa, 0x2b,
	0xff, 0xff, 0xa9, 0x7e, 0xe7, 0x1f, 0xbb, 0xee, 0xdf, 0x4c, 0x29, 0x67, 0xda, 0x87, 0xc3, 0xa1,
	0x79, 0x38, 0xbe, 0x1a, 0x1e, 0x86, 0xfe, 0x8a, 0xda, 0x5f, 0x72, 0x7f, 0xfd, 0xea, 0x97, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x9e, 0x3b, 0x51, 0x88, 0x5d, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClientManagerClient is the client API for ClientManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientManagerClient interface {
	CurrentDeviceExportData(ctx context.Context, in *CurrentDeviceExportDataRequest, opts ...grpc.CallOption) (*CurrentDeviceExportDataReply, error)
	CurrentDeviceGetConfiguration(ctx context.Context, in *CurrentDeviceGetConfigurationRequest, opts ...grpc.CallOption) (*CurrentDeviceGetConfigurationReply, error)
}

type clientManagerClient struct {
	cc *grpc.ClientConn
}

func NewClientManagerClient(cc *grpc.ClientConn) ClientManagerClient {
	return &clientManagerClient{cc}
}

func (c *clientManagerClient) CurrentDeviceExportData(ctx context.Context, in *CurrentDeviceExportDataRequest, opts ...grpc.CallOption) (*CurrentDeviceExportDataReply, error) {
	out := new(CurrentDeviceExportDataReply)
	err := c.cc.Invoke(ctx, "/ClientManager/CurrentDeviceExportData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientManagerClient) CurrentDeviceGetConfiguration(ctx context.Context, in *CurrentDeviceGetConfigurationRequest, opts ...grpc.CallOption) (*CurrentDeviceGetConfigurationReply, error) {
	out := new(CurrentDeviceGetConfigurationReply)
	err := c.cc.Invoke(ctx, "/ClientManager/CurrentDeviceGetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientManagerServer is the server API for ClientManager service.
type ClientManagerServer interface {
	CurrentDeviceExportData(context.Context, *CurrentDeviceExportDataRequest) (*CurrentDeviceExportDataReply, error)
	CurrentDeviceGetConfiguration(context.Context, *CurrentDeviceGetConfigurationRequest) (*CurrentDeviceGetConfigurationReply, error)
}

// UnimplementedClientManagerServer can be embedded to have forward compatible implementations.
type UnimplementedClientManagerServer struct {
}

func (*UnimplementedClientManagerServer) CurrentDeviceExportData(ctx context.Context, req *CurrentDeviceExportDataRequest) (*CurrentDeviceExportDataReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CurrentDeviceExportData not implemented")
}
func (*UnimplementedClientManagerServer) CurrentDeviceGetConfiguration(ctx context.Context, req *CurrentDeviceGetConfigurationRequest) (*CurrentDeviceGetConfigurationReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CurrentDeviceGetConfiguration not implemented")
}

func RegisterClientManagerServer(s *grpc.Server, srv ClientManagerServer) {
	s.RegisterService(&_ClientManager_serviceDesc, srv)
}

func _ClientManager_CurrentDeviceExportData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CurrentDeviceExportDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientManagerServer).CurrentDeviceExportData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClientManager/CurrentDeviceExportData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientManagerServer).CurrentDeviceExportData(ctx, req.(*CurrentDeviceExportDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientManager_CurrentDeviceGetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CurrentDeviceGetConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientManagerServer).CurrentDeviceGetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClientManager/CurrentDeviceGetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientManagerServer).CurrentDeviceGetConfiguration(ctx, req.(*CurrentDeviceGetConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ClientManager",
	HandlerType: (*ClientManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CurrentDeviceExportData",
			Handler:    _ClientManager_CurrentDeviceExportData_Handler,
		},
		{
			MethodName: "CurrentDeviceGetConfiguration",
			Handler:    _ClientManager_CurrentDeviceGetConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bertyprotocol.proto",
}

// AccountManagerClient is the client API for AccountManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountManagerClient interface {
	AccountGetConfiguration(ctx context.Context, in *AccountGetConfigurationRequest, opts ...grpc.CallOption) (*AccountGetConfigurationReply, error)
	AccountGetInformation(ctx context.Context, in *AccountGetInformationRequest, opts ...grpc.CallOption) (*AccountGetInformationReply, error)
	AccountLinkNewDevice(ctx context.Context, in *AccountLinkNewDeviceRequest, opts ...grpc.CallOption) (*AccountLinkNewDeviceReply, error)
	AccountDisableIncomingContactRequest(ctx context.Context, in *AccountDisableIncomingContactRequestRequest, opts ...grpc.CallOption) (*AccountDisableIncomingContactRequestReply, error)
	AccountEnableIncomingContactRequest(ctx context.Context, in *AccountEnableIncomingContactRequestRequest, opts ...grpc.CallOption) (*AccountEnableIncomingContactRequestReply, error)
	AccountResetIncomingContactRequestLink(ctx context.Context, in *AccountResetIncomingContactRequestLinkRequest, opts ...grpc.CallOption) (*AccountResetIncomingContactRequestLinkReply, error)
}

type accountManagerClient struct {
	cc *grpc.ClientConn
}

func NewAccountManagerClient(cc *grpc.ClientConn) AccountManagerClient {
	return &accountManagerClient{cc}
}

func (c *accountManagerClient) AccountGetConfiguration(ctx context.Context, in *AccountGetConfigurationRequest, opts ...grpc.CallOption) (*AccountGetConfigurationReply, error) {
	out := new(AccountGetConfigurationReply)
	err := c.cc.Invoke(ctx, "/AccountManager/AccountGetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountManagerClient) AccountGetInformation(ctx context.Context, in *AccountGetInformationRequest, opts ...grpc.CallOption) (*AccountGetInformationReply, error) {
	out := new(AccountGetInformationReply)
	err := c.cc.Invoke(ctx, "/AccountManager/AccountGetInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountManagerClient) AccountLinkNewDevice(ctx context.Context, in *AccountLinkNewDeviceRequest, opts ...grpc.CallOption) (*AccountLinkNewDeviceReply, error) {
	out := new(AccountLinkNewDeviceReply)
	err := c.cc.Invoke(ctx, "/AccountManager/AccountLinkNewDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountManagerClient) AccountDisableIncomingContactRequest(ctx context.Context, in *AccountDisableIncomingContactRequestRequest, opts ...grpc.CallOption) (*AccountDisableIncomingContactRequestReply, error) {
	out := new(AccountDisableIncomingContactRequestReply)
	err := c.cc.Invoke(ctx, "/AccountManager/AccountDisableIncomingContactRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountManagerClient) AccountEnableIncomingContactRequest(ctx context.Context, in *AccountEnableIncomingContactRequestRequest, opts ...grpc.CallOption) (*AccountEnableIncomingContactRequestReply, error) {
	out := new(AccountEnableIncomingContactRequestReply)
	err := c.cc.Invoke(ctx, "/AccountManager/AccountEnableIncomingContactRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountManagerClient) AccountResetIncomingContactRequestLink(ctx context.Context, in *AccountResetIncomingContactRequestLinkRequest, opts ...grpc.CallOption) (*AccountResetIncomingContactRequestLinkReply, error) {
	out := new(AccountResetIncomingContactRequestLinkReply)
	err := c.cc.Invoke(ctx, "/AccountManager/AccountResetIncomingContactRequestLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountManagerServer is the server API for AccountManager service.
type AccountManagerServer interface {
	AccountGetConfiguration(context.Context, *AccountGetConfigurationRequest) (*AccountGetConfigurationReply, error)
	AccountGetInformation(context.Context, *AccountGetInformationRequest) (*AccountGetInformationReply, error)
	AccountLinkNewDevice(context.Context, *AccountLinkNewDeviceRequest) (*AccountLinkNewDeviceReply, error)
	AccountDisableIncomingContactRequest(context.Context, *AccountDisableIncomingContactRequestRequest) (*AccountDisableIncomingContactRequestReply, error)
	AccountEnableIncomingContactRequest(context.Context, *AccountEnableIncomingContactRequestRequest) (*AccountEnableIncomingContactRequestReply, error)
	AccountResetIncomingContactRequestLink(context.Context, *AccountResetIncomingContactRequestLinkRequest) (*AccountResetIncomingContactRequestLinkReply, error)
}

// UnimplementedAccountManagerServer can be embedded to have forward compatible implementations.
type UnimplementedAccountManagerServer struct {
}

func (*UnimplementedAccountManagerServer) AccountGetConfiguration(ctx context.Context, req *AccountGetConfigurationRequest) (*AccountGetConfigurationReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetConfiguration not implemented")
}
func (*UnimplementedAccountManagerServer) AccountGetInformation(ctx context.Context, req *AccountGetInformationRequest) (*AccountGetInformationReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetInformation not implemented")
}
func (*UnimplementedAccountManagerServer) AccountLinkNewDevice(ctx context.Context, req *AccountLinkNewDeviceRequest) (*AccountLinkNewDeviceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountLinkNewDevice not implemented")
}
func (*UnimplementedAccountManagerServer) AccountDisableIncomingContactRequest(ctx context.Context, req *AccountDisableIncomingContactRequestRequest) (*AccountDisableIncomingContactRequestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountDisableIncomingContactRequest not implemented")
}
func (*UnimplementedAccountManagerServer) AccountEnableIncomingContactRequest(ctx context.Context, req *AccountEnableIncomingContactRequestRequest) (*AccountEnableIncomingContactRequestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountEnableIncomingContactRequest not implemented")
}
func (*UnimplementedAccountManagerServer) AccountResetIncomingContactRequestLink(ctx context.Context, req *AccountResetIncomingContactRequestLinkRequest) (*AccountResetIncomingContactRequestLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResetIncomingContactRequestLink not implemented")
}

func RegisterAccountManagerServer(s *grpc.Server, srv AccountManagerServer) {
	s.RegisterService(&_AccountManager_serviceDesc, srv)
}

func _AccountManager_AccountGetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountGetConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountManagerServer).AccountGetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountManager/AccountGetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountManagerServer).AccountGetConfiguration(ctx, req.(*AccountGetConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountManager_AccountGetInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountGetInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountManagerServer).AccountGetInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountManager/AccountGetInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountManagerServer).AccountGetInformation(ctx, req.(*AccountGetInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountManager_AccountLinkNewDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountLinkNewDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountManagerServer).AccountLinkNewDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountManager/AccountLinkNewDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountManagerServer).AccountLinkNewDevice(ctx, req.(*AccountLinkNewDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountManager_AccountDisableIncomingContactRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountDisableIncomingContactRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountManagerServer).AccountDisableIncomingContactRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountManager/AccountDisableIncomingContactRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountManagerServer).AccountDisableIncomingContactRequest(ctx, req.(*AccountDisableIncomingContactRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountManager_AccountEnableIncomingContactRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountEnableIncomingContactRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountManagerServer).AccountEnableIncomingContactRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountManager/AccountEnableIncomingContactRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountManagerServer).AccountEnableIncomingContactRequest(ctx, req.(*AccountEnableIncomingContactRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountManager_AccountResetIncomingContactRequestLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountResetIncomingContactRequestLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountManagerServer).AccountResetIncomingContactRequestLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountManager/AccountResetIncomingContactRequestLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountManagerServer).AccountResetIncomingContactRequestLink(ctx, req.(*AccountResetIncomingContactRequestLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AccountManager",
	HandlerType: (*AccountManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AccountGetConfiguration",
			Handler:    _AccountManager_AccountGetConfiguration_Handler,
		},
		{
			MethodName: "AccountGetInformation",
			Handler:    _AccountManager_AccountGetInformation_Handler,
		},
		{
			MethodName: "AccountLinkNewDevice",
			Handler:    _AccountManager_AccountLinkNewDevice_Handler,
		},
		{
			MethodName: "AccountDisableIncomingContactRequest",
			Handler:    _AccountManager_AccountDisableIncomingContactRequest_Handler,
		},
		{
			MethodName: "AccountEnableIncomingContactRequest",
			Handler:    _AccountManager_AccountEnableIncomingContactRequest_Handler,
		},
		{
			MethodName: "AccountResetIncomingContactRequestLink",
			Handler:    _AccountManager_AccountResetIncomingContactRequestLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bertyprotocol.proto",
}

// EventManagerClient is the client API for EventManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventManagerClient interface {
	EventSubscribe(ctx context.Context, in *EventSubscribeRequest, opts ...grpc.CallOption) (EventManager_EventSubscribeClient, error)
}

type eventManagerClient struct {
	cc *grpc.ClientConn
}

func NewEventManagerClient(cc *grpc.ClientConn) EventManagerClient {
	return &eventManagerClient{cc}
}

func (c *eventManagerClient) EventSubscribe(ctx context.Context, in *EventSubscribeRequest, opts ...grpc.CallOption) (EventManager_EventSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventManager_serviceDesc.Streams[0], "/EventManager/EventSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventManagerEventSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventManager_EventSubscribeClient interface {
	Recv() (*EventStream, error)
	grpc.ClientStream
}

type eventManagerEventSubscribeClient struct {
	grpc.ClientStream
}

func (x *eventManagerEventSubscribeClient) Recv() (*EventStream, error) {
	m := new(EventStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventManagerServer is the server API for EventManager service.
type EventManagerServer interface {
	EventSubscribe(*EventSubscribeRequest, EventManager_EventSubscribeServer) error
}

// UnimplementedEventManagerServer can be embedded to have forward compatible implementations.
type UnimplementedEventManagerServer struct {
}

func (*UnimplementedEventManagerServer) EventSubscribe(req *EventSubscribeRequest, srv EventManager_EventSubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method EventSubscribe not implemented")
}

func RegisterEventManagerServer(s *grpc.Server, srv EventManagerServer) {
	s.RegisterService(&_EventManager_serviceDesc, srv)
}

func _EventManager_EventSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventManagerServer).EventSubscribe(m, &eventManagerEventSubscribeServer{stream})
}

type EventManager_EventSubscribeServer interface {
	Send(*EventStream) error
	grpc.ServerStream
}

type eventManagerEventSubscribeServer struct {
	grpc.ServerStream
}

func (x *eventManagerEventSubscribeServer) Send(m *EventStream) error {
	return x.ServerStream.SendMsg(m)
}

var _EventManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "EventManager",
	HandlerType: (*EventManagerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventSubscribe",
			Handler:       _EventManager_EventSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bertyprotocol.proto",
}

// ContactRequestManagerClient is the client API for ContactRequestManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactRequestManagerClient interface {
	ContactRequestAccept(ctx context.Context, in *ContactRequestAcceptRequest, opts ...grpc.CallOption) (*ContactRequestAcceptReply, error)
	ContactRequestDiscard(ctx context.Context, in *ContactRequestDiscardRequest, opts ...grpc.CallOption) (*ContactRequestDiscardReply, error)
	ContactRequestListIncoming(ctx context.Context, in *ContactRequestListIncomingRequest, opts ...grpc.CallOption) (ContactRequestManager_ContactRequestListIncomingClient, error)
	ContactRequestListOutgoing(ctx context.Context, in *ContactRequestListOutgoingRequest, opts ...grpc.CallOption) (ContactRequestManager_ContactRequestListOutgoingClient, error)
	ContactRequestSend(ctx context.Context, in *ContactRequestSendRequest, opts ...grpc.CallOption) (*ContactRequestSendReply, error)
}

type contactRequestManagerClient struct {
	cc *grpc.ClientConn
}

func NewContactRequestManagerClient(cc *grpc.ClientConn) ContactRequestManagerClient {
	return &contactRequestManagerClient{cc}
}

func (c *contactRequestManagerClient) ContactRequestAccept(ctx context.Context, in *ContactRequestAcceptRequest, opts ...grpc.CallOption) (*ContactRequestAcceptReply, error) {
	out := new(ContactRequestAcceptReply)
	err := c.cc.Invoke(ctx, "/ContactRequestManager/ContactRequestAccept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactRequestManagerClient) ContactRequestDiscard(ctx context.Context, in *ContactRequestDiscardRequest, opts ...grpc.CallOption) (*ContactRequestDiscardReply, error) {
	out := new(ContactRequestDiscardReply)
	err := c.cc.Invoke(ctx, "/ContactRequestManager/ContactRequestDiscard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactRequestManagerClient) ContactRequestListIncoming(ctx context.Context, in *ContactRequestListIncomingRequest, opts ...grpc.CallOption) (ContactRequestManager_ContactRequestListIncomingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactRequestManager_serviceDesc.Streams[0], "/ContactRequestManager/ContactRequestListIncoming", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactRequestManagerContactRequestListIncomingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactRequestManager_ContactRequestListIncomingClient interface {
	Recv() (*ContactRequestListIncomingReply, error)
	grpc.ClientStream
}

type contactRequestManagerContactRequestListIncomingClient struct {
	grpc.ClientStream
}

func (x *contactRequestManagerContactRequestListIncomingClient) Recv() (*ContactRequestListIncomingReply, error) {
	m := new(ContactRequestListIncomingReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactRequestManagerClient) ContactRequestListOutgoing(ctx context.Context, in *ContactRequestListOutgoingRequest, opts ...grpc.CallOption) (ContactRequestManager_ContactRequestListOutgoingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactRequestManager_serviceDesc.Streams[1], "/ContactRequestManager/ContactRequestListOutgoing", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactRequestManagerContactRequestListOutgoingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactRequestManager_ContactRequestListOutgoingClient interface {
	Recv() (*ContactRequestListOutgoingReply, error)
	grpc.ClientStream
}

type contactRequestManagerContactRequestListOutgoingClient struct {
	grpc.ClientStream
}

func (x *contactRequestManagerContactRequestListOutgoingClient) Recv() (*ContactRequestListOutgoingReply, error) {
	m := new(ContactRequestListOutgoingReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactRequestManagerClient) ContactRequestSend(ctx context.Context, in *ContactRequestSendRequest, opts ...grpc.CallOption) (*ContactRequestSendReply, error) {
	out := new(ContactRequestSendReply)
	err := c.cc.Invoke(ctx, "/ContactRequestManager/ContactRequestSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactRequestManagerServer is the server API for ContactRequestManager service.
type ContactRequestManagerServer interface {
	ContactRequestAccept(context.Context, *ContactRequestAcceptRequest) (*ContactRequestAcceptReply, error)
	ContactRequestDiscard(context.Context, *ContactRequestDiscardRequest) (*ContactRequestDiscardReply, error)
	ContactRequestListIncoming(*ContactRequestListIncomingRequest, ContactRequestManager_ContactRequestListIncomingServer) error
	ContactRequestListOutgoing(*ContactRequestListOutgoingRequest, ContactRequestManager_ContactRequestListOutgoingServer) error
	ContactRequestSend(context.Context, *ContactRequestSendRequest) (*ContactRequestSendReply, error)
}

// UnimplementedContactRequestManagerServer can be embedded to have forward compatible implementations.
type UnimplementedContactRequestManagerServer struct {
}

func (*UnimplementedContactRequestManagerServer) ContactRequestAccept(ctx context.Context, req *ContactRequestAcceptRequest) (*ContactRequestAcceptReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactRequestAccept not implemented")
}
func (*UnimplementedContactRequestManagerServer) ContactRequestDiscard(ctx context.Context, req *ContactRequestDiscardRequest) (*ContactRequestDiscardReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactRequestDiscard not implemented")
}
func (*UnimplementedContactRequestManagerServer) ContactRequestListIncoming(req *ContactRequestListIncomingRequest, srv ContactRequestManager_ContactRequestListIncomingServer) error {
	return status.Errorf(codes.Unimplemented, "method ContactRequestListIncoming not implemented")
}
func (*UnimplementedContactRequestManagerServer) ContactRequestListOutgoing(req *ContactRequestListOutgoingRequest, srv ContactRequestManager_ContactRequestListOutgoingServer) error {
	return status.Errorf(codes.Unimplemented, "method ContactRequestListOutgoing not implemented")
}
func (*UnimplementedContactRequestManagerServer) ContactRequestSend(ctx context.Context, req *ContactRequestSendRequest) (*ContactRequestSendReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactRequestSend not implemented")
}

func RegisterContactRequestManagerServer(s *grpc.Server, srv ContactRequestManagerServer) {
	s.RegisterService(&_ContactRequestManager_serviceDesc, srv)
}

func _ContactRequestManager_ContactRequestAccept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactRequestAcceptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactRequestManagerServer).ContactRequestAccept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContactRequestManager/ContactRequestAccept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactRequestManagerServer).ContactRequestAccept(ctx, req.(*ContactRequestAcceptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactRequestManager_ContactRequestDiscard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactRequestDiscardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactRequestManagerServer).ContactRequestDiscard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContactRequestManager/ContactRequestDiscard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactRequestManagerServer).ContactRequestDiscard(ctx, req.(*ContactRequestDiscardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactRequestManager_ContactRequestListIncoming_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ContactRequestListIncomingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactRequestManagerServer).ContactRequestListIncoming(m, &contactRequestManagerContactRequestListIncomingServer{stream})
}

type ContactRequestManager_ContactRequestListIncomingServer interface {
	Send(*ContactRequestListIncomingReply) error
	grpc.ServerStream
}

type contactRequestManagerContactRequestListIncomingServer struct {
	grpc.ServerStream
}

func (x *contactRequestManagerContactRequestListIncomingServer) Send(m *ContactRequestListIncomingReply) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactRequestManager_ContactRequestListOutgoing_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ContactRequestListOutgoingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactRequestManagerServer).ContactRequestListOutgoing(m, &contactRequestManagerContactRequestListOutgoingServer{stream})
}

type ContactRequestManager_ContactRequestListOutgoingServer interface {
	Send(*ContactRequestListOutgoingReply) error
	grpc.ServerStream
}

type contactRequestManagerContactRequestListOutgoingServer struct {
	grpc.ServerStream
}

func (x *contactRequestManagerContactRequestListOutgoingServer) Send(m *ContactRequestListOutgoingReply) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactRequestManager_ContactRequestSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactRequestSendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactRequestManagerServer).ContactRequestSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContactRequestManager/ContactRequestSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactRequestManagerServer).ContactRequestSend(ctx, req.(*ContactRequestSendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactRequestManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ContactRequestManager",
	HandlerType: (*ContactRequestManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ContactRequestAccept",
			Handler:    _ContactRequestManager_ContactRequestAccept_Handler,
		},
		{
			MethodName: "ContactRequestDiscard",
			Handler:    _ContactRequestManager_ContactRequestDiscard_Handler,
		},
		{
			MethodName: "ContactRequestSend",
			Handler:    _ContactRequestManager_ContactRequestSend_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ContactRequestListIncoming",
			Handler:       _ContactRequestManager_ContactRequestListIncoming_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ContactRequestListOutgoing",
			Handler:       _ContactRequestManager_ContactRequestListOutgoing_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bertyprotocol.proto",
}

// ContactManagerClient is the client API for ContactManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactManagerClient interface {
	ContactGet(ctx context.Context, in *ContactGetRequest, opts ...grpc.CallOption) (*ContactGetReply, error)
	ContactList(ctx context.Context, in *ContactListRequest, opts ...grpc.CallOption) (ContactManager_ContactListClient, error)
	ContactRemove(ctx context.Context, in *ContactRemoveRequest, opts ...grpc.CallOption) (*ContactRemoveReply, error)
}

type contactManagerClient struct {
	cc *grpc.ClientConn
}

func NewContactManagerClient(cc *grpc.ClientConn) ContactManagerClient {
	return &contactManagerClient{cc}
}

func (c *contactManagerClient) ContactGet(ctx context.Context, in *ContactGetRequest, opts ...grpc.CallOption) (*ContactGetReply, error) {
	out := new(ContactGetReply)
	err := c.cc.Invoke(ctx, "/ContactManager/ContactGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactManagerClient) ContactList(ctx context.Context, in *ContactListRequest, opts ...grpc.CallOption) (ContactManager_ContactListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactManager_serviceDesc.Streams[0], "/ContactManager/ContactList", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactManagerContactListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactManager_ContactListClient interface {
	Recv() (*ContactListReply, error)
	grpc.ClientStream
}

type contactManagerContactListClient struct {
	grpc.ClientStream
}

func (x *contactManagerContactListClient) Recv() (*ContactListReply, error) {
	m := new(ContactListReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactManagerClient) ContactRemove(ctx context.Context, in *ContactRemoveRequest, opts ...grpc.CallOption) (*ContactRemoveReply, error) {
	out := new(ContactRemoveReply)
	err := c.cc.Invoke(ctx, "/ContactManager/ContactRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactManagerServer is the server API for ContactManager service.
type ContactManagerServer interface {
	ContactGet(context.Context, *ContactGetRequest) (*ContactGetReply, error)
	ContactList(*ContactListRequest, ContactManager_ContactListServer) error
	ContactRemove(context.Context, *ContactRemoveRequest) (*ContactRemoveReply, error)
}

// UnimplementedContactManagerServer can be embedded to have forward compatible implementations.
type UnimplementedContactManagerServer struct {
}

func (*UnimplementedContactManagerServer) ContactGet(ctx context.Context, req *ContactGetRequest) (*ContactGetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactGet not implemented")
}
func (*UnimplementedContactManagerServer) ContactList(req *ContactListRequest, srv ContactManager_ContactListServer) error {
	return status.Errorf(codes.Unimplemented, "method ContactList not implemented")
}
func (*UnimplementedContactManagerServer) ContactRemove(ctx context.Context, req *ContactRemoveRequest) (*ContactRemoveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactRemove not implemented")
}

func RegisterContactManagerServer(s *grpc.Server, srv ContactManagerServer) {
	s.RegisterService(&_ContactManager_serviceDesc, srv)
}

func _ContactManager_ContactGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactManagerServer).ContactGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContactManager/ContactGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactManagerServer).ContactGet(ctx, req.(*ContactGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactManager_ContactList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ContactListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactManagerServer).ContactList(m, &contactManagerContactListServer{stream})
}

type ContactManager_ContactListServer interface {
	Send(*ContactListReply) error
	grpc.ServerStream
}

type contactManagerContactListServer struct {
	grpc.ServerStream
}

func (x *contactManagerContactListServer) Send(m *ContactListReply) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactManager_ContactRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactManagerServer).ContactRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContactManager/ContactRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactManagerServer).ContactRemove(ctx, req.(*ContactRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ContactManager",
	HandlerType: (*ContactManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ContactGet",
			Handler:    _ContactManager_ContactGet_Handler,
		},
		{
			MethodName: "ContactRemove",
			Handler:    _ContactManager_ContactRemove_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ContactList",
			Handler:       _ContactManager_ContactList_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bertyprotocol.proto",
}

// StreamManagerClient is the client API for StreamManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamManagerClient interface {
	StreamManagerRequestToContact(ctx context.Context, in *StreamManagerRequestToContactRequest, opts ...grpc.CallOption) (*StreamManagerRequestToContactReply, error)
	StreamManagerAccept(ctx context.Context, opts ...grpc.CallOption) (StreamManager_StreamManagerAcceptClient, error)
}

type streamManagerClient struct {
	cc *grpc.ClientConn
}

func NewStreamManagerClient(cc *grpc.ClientConn) StreamManagerClient {
	return &streamManagerClient{cc}
}

func (c *streamManagerClient) StreamManagerRequestToContact(ctx context.Context, in *StreamManagerRequestToContactRequest, opts ...grpc.CallOption) (*StreamManagerRequestToContactReply, error) {
	out := new(StreamManagerRequestToContactReply)
	err := c.cc.Invoke(ctx, "/StreamManager/StreamManagerRequestToContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamManagerClient) StreamManagerAccept(ctx context.Context, opts ...grpc.CallOption) (StreamManager_StreamManagerAcceptClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StreamManager_serviceDesc.Streams[0], "/StreamManager/StreamManagerAccept", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamManagerStreamManagerAcceptClient{stream}
	return x, nil
}

type StreamManager_StreamManagerAcceptClient interface {
	Send(*StreamManagerAcceptRequest) error
	Recv() (*StreamManagerAcceptReply, error)
	grpc.ClientStream
}

type streamManagerStreamManagerAcceptClient struct {
	grpc.ClientStream
}

func (x *streamManagerStreamManagerAcceptClient) Send(m *StreamManagerAcceptRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *streamManagerStreamManagerAcceptClient) Recv() (*StreamManagerAcceptReply, error) {
	m := new(StreamManagerAcceptReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StreamManagerServer is the server API for StreamManager service.
type StreamManagerServer interface {
	StreamManagerRequestToContact(context.Context, *StreamManagerRequestToContactRequest) (*StreamManagerRequestToContactReply, error)
	StreamManagerAccept(StreamManager_StreamManagerAcceptServer) error
}

// UnimplementedStreamManagerServer can be embedded to have forward compatible implementations.
type UnimplementedStreamManagerServer struct {
}

func (*UnimplementedStreamManagerServer) StreamManagerRequestToContact(ctx context.Context, req *StreamManagerRequestToContactRequest) (*StreamManagerRequestToContactReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StreamManagerRequestToContact not implemented")
}
func (*UnimplementedStreamManagerServer) StreamManagerAccept(srv StreamManager_StreamManagerAcceptServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamManagerAccept not implemented")
}

func RegisterStreamManagerServer(s *grpc.Server, srv StreamManagerServer) {
	s.RegisterService(&_StreamManager_serviceDesc, srv)
}

func _StreamManager_StreamManagerRequestToContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamManagerRequestToContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamManagerServer).StreamManagerRequestToContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StreamManager/StreamManagerRequestToContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamManagerServer).StreamManagerRequestToContact(ctx, req.(*StreamManagerRequestToContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamManager_StreamManagerAccept_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StreamManagerServer).StreamManagerAccept(&streamManagerStreamManagerAcceptServer{stream})
}

type StreamManager_StreamManagerAcceptServer interface {
	Send(*StreamManagerAcceptReply) error
	Recv() (*StreamManagerAcceptRequest, error)
	grpc.ServerStream
}

type streamManagerStreamManagerAcceptServer struct {
	grpc.ServerStream
}

func (x *streamManagerStreamManagerAcceptServer) Send(m *StreamManagerAcceptReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *streamManagerStreamManagerAcceptServer) Recv() (*StreamManagerAcceptRequest, error) {
	m := new(StreamManagerAcceptRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _StreamManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StreamManager",
	HandlerType: (*StreamManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StreamManagerRequestToContact",
			Handler:    _StreamManager_StreamManagerRequestToContact_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamManagerAccept",
			Handler:       _StreamManager_StreamManagerAccept_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "bertyprotocol.proto",
}

// GroupManagerClient is the client API for GroupManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupManagerClient interface {
	GroupCreate(ctx context.Context, in *GroupCreateRequest, opts ...grpc.CallOption) (*GroupCreateReply, error)
	GroupGenerateInviteLink(ctx context.Context, in *GroupGenerateInviteLinkRequest, opts ...grpc.CallOption) (*GroupGenerateInviteLinkReply, error)
	GroupLeave(ctx context.Context, in *GroupLeaveRequest, opts ...grpc.CallOption) (*GroupLeaveReply, error)
	GroupList(ctx context.Context, in *GroupListRequest, opts ...grpc.CallOption) (GroupManager_GroupListClient, error)
	GroupMessageCreate(ctx context.Context, in *GroupMessageCreateRequest, opts ...grpc.CallOption) (*GroupMessageCreateReply, error)
	GroupMessageList(ctx context.Context, in *GroupMessageListRequest, opts ...grpc.CallOption) (GroupManager_GroupMessageListClient, error)
	// GroupPubSubTopic uses pub sub to send volatile updates to other group members
	GroupPubSubTopicInit(ctx context.Context, opts ...grpc.CallOption) (GroupManager_GroupPubSubTopicInitClient, error)
	GroupPubSubTopicSubscribe(ctx context.Context, in *GroupPubSubTopicSubscribeRequest, opts ...grpc.CallOption) (GroupManager_GroupPubSubTopicSubscribeClient, error)
}

type groupManagerClient struct {
	cc *grpc.ClientConn
}

func NewGroupManagerClient(cc *grpc.ClientConn) GroupManagerClient {
	return &groupManagerClient{cc}
}

func (c *groupManagerClient) GroupCreate(ctx context.Context, in *GroupCreateRequest, opts ...grpc.CallOption) (*GroupCreateReply, error) {
	out := new(GroupCreateReply)
	err := c.cc.Invoke(ctx, "/GroupManager/GroupCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupManagerClient) GroupGenerateInviteLink(ctx context.Context, in *GroupGenerateInviteLinkRequest, opts ...grpc.CallOption) (*GroupGenerateInviteLinkReply, error) {
	out := new(GroupGenerateInviteLinkReply)
	err := c.cc.Invoke(ctx, "/GroupManager/GroupGenerateInviteLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupManagerClient) GroupLeave(ctx context.Context, in *GroupLeaveRequest, opts ...grpc.CallOption) (*GroupLeaveReply, error) {
	out := new(GroupLeaveReply)
	err := c.cc.Invoke(ctx, "/GroupManager/GroupLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupManagerClient) GroupList(ctx context.Context, in *GroupListRequest, opts ...grpc.CallOption) (GroupManager_GroupListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GroupManager_serviceDesc.Streams[0], "/GroupManager/GroupList", opts...)
	if err != nil {
		return nil, err
	}
	x := &groupManagerGroupListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GroupManager_GroupListClient interface {
	Recv() (*GroupListReply, error)
	grpc.ClientStream
}

type groupManagerGroupListClient struct {
	grpc.ClientStream
}

func (x *groupManagerGroupListClient) Recv() (*GroupListReply, error) {
	m := new(GroupListReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *groupManagerClient) GroupMessageCreate(ctx context.Context, in *GroupMessageCreateRequest, opts ...grpc.CallOption) (*GroupMessageCreateReply, error) {
	out := new(GroupMessageCreateReply)
	err := c.cc.Invoke(ctx, "/GroupManager/GroupMessageCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupManagerClient) GroupMessageList(ctx context.Context, in *GroupMessageListRequest, opts ...grpc.CallOption) (GroupManager_GroupMessageListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GroupManager_serviceDesc.Streams[1], "/GroupManager/GroupMessageList", opts...)
	if err != nil {
		return nil, err
	}
	x := &groupManagerGroupMessageListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GroupManager_GroupMessageListClient interface {
	Recv() (*GroupMessageListReply, error)
	grpc.ClientStream
}

type groupManagerGroupMessageListClient struct {
	grpc.ClientStream
}

func (x *groupManagerGroupMessageListClient) Recv() (*GroupMessageListReply, error) {
	m := new(GroupMessageListReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *groupManagerClient) GroupPubSubTopicInit(ctx context.Context, opts ...grpc.CallOption) (GroupManager_GroupPubSubTopicInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GroupManager_serviceDesc.Streams[2], "/GroupManager/GroupPubSubTopicInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &groupManagerGroupPubSubTopicInitClient{stream}
	return x, nil
}

type GroupManager_GroupPubSubTopicInitClient interface {
	Send(*GroupPubSubTopicInitRequest) error
	CloseAndRecv() (*GroupPubSubTopicInitReply, error)
	grpc.ClientStream
}

type groupManagerGroupPubSubTopicInitClient struct {
	grpc.ClientStream
}

func (x *groupManagerGroupPubSubTopicInitClient) Send(m *GroupPubSubTopicInitRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *groupManagerGroupPubSubTopicInitClient) CloseAndRecv() (*GroupPubSubTopicInitReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GroupPubSubTopicInitReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *groupManagerClient) GroupPubSubTopicSubscribe(ctx context.Context, in *GroupPubSubTopicSubscribeRequest, opts ...grpc.CallOption) (GroupManager_GroupPubSubTopicSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GroupManager_serviceDesc.Streams[3], "/GroupManager/GroupPubSubTopicSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &groupManagerGroupPubSubTopicSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GroupManager_GroupPubSubTopicSubscribeClient interface {
	Recv() (*GroupPubSubTopicSubscribeReply, error)
	grpc.ClientStream
}

type groupManagerGroupPubSubTopicSubscribeClient struct {
	grpc.ClientStream
}

func (x *groupManagerGroupPubSubTopicSubscribeClient) Recv() (*GroupPubSubTopicSubscribeReply, error) {
	m := new(GroupPubSubTopicSubscribeReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GroupManagerServer is the server API for GroupManager service.
type GroupManagerServer interface {
	GroupCreate(context.Context, *GroupCreateRequest) (*GroupCreateReply, error)
	GroupGenerateInviteLink(context.Context, *GroupGenerateInviteLinkRequest) (*GroupGenerateInviteLinkReply, error)
	GroupLeave(context.Context, *GroupLeaveRequest) (*GroupLeaveReply, error)
	GroupList(*GroupListRequest, GroupManager_GroupListServer) error
	GroupMessageCreate(context.Context, *GroupMessageCreateRequest) (*GroupMessageCreateReply, error)
	GroupMessageList(*GroupMessageListRequest, GroupManager_GroupMessageListServer) error
	// GroupPubSubTopic uses pub sub to send volatile updates to other group members
	GroupPubSubTopicInit(GroupManager_GroupPubSubTopicInitServer) error
	GroupPubSubTopicSubscribe(*GroupPubSubTopicSubscribeRequest, GroupManager_GroupPubSubTopicSubscribeServer) error
}

// UnimplementedGroupManagerServer can be embedded to have forward compatible implementations.
type UnimplementedGroupManagerServer struct {
}

func (*UnimplementedGroupManagerServer) GroupCreate(ctx context.Context, req *GroupCreateRequest) (*GroupCreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupCreate not implemented")
}
func (*UnimplementedGroupManagerServer) GroupGenerateInviteLink(ctx context.Context, req *GroupGenerateInviteLinkRequest) (*GroupGenerateInviteLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupGenerateInviteLink not implemented")
}
func (*UnimplementedGroupManagerServer) GroupLeave(ctx context.Context, req *GroupLeaveRequest) (*GroupLeaveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupLeave not implemented")
}
func (*UnimplementedGroupManagerServer) GroupList(req *GroupListRequest, srv GroupManager_GroupListServer) error {
	return status.Errorf(codes.Unimplemented, "method GroupList not implemented")
}
func (*UnimplementedGroupManagerServer) GroupMessageCreate(ctx context.Context, req *GroupMessageCreateRequest) (*GroupMessageCreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupMessageCreate not implemented")
}
func (*UnimplementedGroupManagerServer) GroupMessageList(req *GroupMessageListRequest, srv GroupManager_GroupMessageListServer) error {
	return status.Errorf(codes.Unimplemented, "method GroupMessageList not implemented")
}
func (*UnimplementedGroupManagerServer) GroupPubSubTopicInit(srv GroupManager_GroupPubSubTopicInitServer) error {
	return status.Errorf(codes.Unimplemented, "method GroupPubSubTopicInit not implemented")
}
func (*UnimplementedGroupManagerServer) GroupPubSubTopicSubscribe(req *GroupPubSubTopicSubscribeRequest, srv GroupManager_GroupPubSubTopicSubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method GroupPubSubTopicSubscribe not implemented")
}

func RegisterGroupManagerServer(s *grpc.Server, srv GroupManagerServer) {
	s.RegisterService(&_GroupManager_serviceDesc, srv)
}

func _GroupManager_GroupCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupManagerServer).GroupCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GroupManager/GroupCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupManagerServer).GroupCreate(ctx, req.(*GroupCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupManager_GroupGenerateInviteLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupGenerateInviteLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupManagerServer).GroupGenerateInviteLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GroupManager/GroupGenerateInviteLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupManagerServer).GroupGenerateInviteLink(ctx, req.(*GroupGenerateInviteLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupManager_GroupLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupLeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupManagerServer).GroupLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GroupManager/GroupLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupManagerServer).GroupLeave(ctx, req.(*GroupLeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupManager_GroupList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GroupListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GroupManagerServer).GroupList(m, &groupManagerGroupListServer{stream})
}

type GroupManager_GroupListServer interface {
	Send(*GroupListReply) error
	grpc.ServerStream
}

type groupManagerGroupListServer struct {
	grpc.ServerStream
}

func (x *groupManagerGroupListServer) Send(m *GroupListReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GroupManager_GroupMessageCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupMessageCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupManagerServer).GroupMessageCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GroupManager/GroupMessageCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupManagerServer).GroupMessageCreate(ctx, req.(*GroupMessageCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupManager_GroupMessageList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GroupMessageListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GroupManagerServer).GroupMessageList(m, &groupManagerGroupMessageListServer{stream})
}

type GroupManager_GroupMessageListServer interface {
	Send(*GroupMessageListReply) error
	grpc.ServerStream
}

type groupManagerGroupMessageListServer struct {
	grpc.ServerStream
}

func (x *groupManagerGroupMessageListServer) Send(m *GroupMessageListReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GroupManager_GroupPubSubTopicInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GroupManagerServer).GroupPubSubTopicInit(&groupManagerGroupPubSubTopicInitServer{stream})
}

type GroupManager_GroupPubSubTopicInitServer interface {
	SendAndClose(*GroupPubSubTopicInitReply) error
	Recv() (*GroupPubSubTopicInitRequest, error)
	grpc.ServerStream
}

type groupManagerGroupPubSubTopicInitServer struct {
	grpc.ServerStream
}

func (x *groupManagerGroupPubSubTopicInitServer) SendAndClose(m *GroupPubSubTopicInitReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *groupManagerGroupPubSubTopicInitServer) Recv() (*GroupPubSubTopicInitRequest, error) {
	m := new(GroupPubSubTopicInitRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GroupManager_GroupPubSubTopicSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GroupPubSubTopicSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GroupManagerServer).GroupPubSubTopicSubscribe(m, &groupManagerGroupPubSubTopicSubscribeServer{stream})
}

type GroupManager_GroupPubSubTopicSubscribeServer interface {
	Send(*GroupPubSubTopicSubscribeReply) error
	grpc.ServerStream
}

type groupManagerGroupPubSubTopicSubscribeServer struct {
	grpc.ServerStream
}

func (x *groupManagerGroupPubSubTopicSubscribeServer) Send(m *GroupPubSubTopicSubscribeReply) error {
	return x.ServerStream.SendMsg(m)
}

var _GroupManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GroupManager",
	HandlerType: (*GroupManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GroupCreate",
			Handler:    _GroupManager_GroupCreate_Handler,
		},
		{
			MethodName: "GroupGenerateInviteLink",
			Handler:    _GroupManager_GroupGenerateInviteLink_Handler,
		},
		{
			MethodName: "GroupLeave",
			Handler:    _GroupManager_GroupLeave_Handler,
		},
		{
			MethodName: "GroupMessageCreate",
			Handler:    _GroupManager_GroupMessageCreate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GroupList",
			Handler:       _GroupManager_GroupList_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GroupMessageList",
			Handler:       _GroupManager_GroupMessageList_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GroupPubSubTopicInit",
			Handler:       _GroupManager_GroupPubSubTopicInit_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GroupPubSubTopicSubscribe",
			Handler:       _GroupManager_GroupPubSubTopicSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bertyprotocol.proto",
}

// GroupInvitationManagerClient is the client API for GroupInvitationManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupInvitationManagerClient interface {
	GroupInvitationAccept(ctx context.Context, in *GroupInvitationAcceptRequest, opts ...grpc.CallOption) (*GroupInvitationAcceptReply, error)
	GroupInvitationCreate(ctx context.Context, in *GroupInvitationCreateRequest, opts ...grpc.CallOption) (*GroupInvitationCreateReply, error)
	GroupInvitationDiscard(ctx context.Context, in *GroupInvitationDiscardRequest, opts ...grpc.CallOption) (*GroupInvitationDiscardReply, error)
	GroupInvitationList(ctx context.Context, in *GroupInvitationListRequest, opts ...grpc.CallOption) (GroupInvitationManager_GroupInvitationListClient, error)
}

type groupInvitationManagerClient struct {
	cc *grpc.ClientConn
}

func NewGroupInvitationManagerClient(cc *grpc.ClientConn) GroupInvitationManagerClient {
	return &groupInvitationManagerClient{cc}
}

func (c *groupInvitationManagerClient) GroupInvitationAccept(ctx context.Context, in *GroupInvitationAcceptRequest, opts ...grpc.CallOption) (*GroupInvitationAcceptReply, error) {
	out := new(GroupInvitationAcceptReply)
	err := c.cc.Invoke(ctx, "/GroupInvitationManager/GroupInvitationAccept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupInvitationManagerClient) GroupInvitationCreate(ctx context.Context, in *GroupInvitationCreateRequest, opts ...grpc.CallOption) (*GroupInvitationCreateReply, error) {
	out := new(GroupInvitationCreateReply)
	err := c.cc.Invoke(ctx, "/GroupInvitationManager/GroupInvitationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupInvitationManagerClient) GroupInvitationDiscard(ctx context.Context, in *GroupInvitationDiscardRequest, opts ...grpc.CallOption) (*GroupInvitationDiscardReply, error) {
	out := new(GroupInvitationDiscardReply)
	err := c.cc.Invoke(ctx, "/GroupInvitationManager/GroupInvitationDiscard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupInvitationManagerClient) GroupInvitationList(ctx context.Context, in *GroupInvitationListRequest, opts ...grpc.CallOption) (GroupInvitationManager_GroupInvitationListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GroupInvitationManager_serviceDesc.Streams[0], "/GroupInvitationManager/GroupInvitationList", opts...)
	if err != nil {
		return nil, err
	}
	x := &groupInvitationManagerGroupInvitationListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GroupInvitationManager_GroupInvitationListClient interface {
	Recv() (*GroupInvitationListReply, error)
	grpc.ClientStream
}

type groupInvitationManagerGroupInvitationListClient struct {
	grpc.ClientStream
}

func (x *groupInvitationManagerGroupInvitationListClient) Recv() (*GroupInvitationListReply, error) {
	m := new(GroupInvitationListReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GroupInvitationManagerServer is the server API for GroupInvitationManager service.
type GroupInvitationManagerServer interface {
	GroupInvitationAccept(context.Context, *GroupInvitationAcceptRequest) (*GroupInvitationAcceptReply, error)
	GroupInvitationCreate(context.Context, *GroupInvitationCreateRequest) (*GroupInvitationCreateReply, error)
	GroupInvitationDiscard(context.Context, *GroupInvitationDiscardRequest) (*GroupInvitationDiscardReply, error)
	GroupInvitationList(*GroupInvitationListRequest, GroupInvitationManager_GroupInvitationListServer) error
}

// UnimplementedGroupInvitationManagerServer can be embedded to have forward compatible implementations.
type UnimplementedGroupInvitationManagerServer struct {
}

func (*UnimplementedGroupInvitationManagerServer) GroupInvitationAccept(ctx context.Context, req *GroupInvitationAcceptRequest) (*GroupInvitationAcceptReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupInvitationAccept not implemented")
}
func (*UnimplementedGroupInvitationManagerServer) GroupInvitationCreate(ctx context.Context, req *GroupInvitationCreateRequest) (*GroupInvitationCreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupInvitationCreate not implemented")
}
func (*UnimplementedGroupInvitationManagerServer) GroupInvitationDiscard(ctx context.Context, req *GroupInvitationDiscardRequest) (*GroupInvitationDiscardReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupInvitationDiscard not implemented")
}
func (*UnimplementedGroupInvitationManagerServer) GroupInvitationList(req *GroupInvitationListRequest, srv GroupInvitationManager_GroupInvitationListServer) error {
	return status.Errorf(codes.Unimplemented, "method GroupInvitationList not implemented")
}

func RegisterGroupInvitationManagerServer(s *grpc.Server, srv GroupInvitationManagerServer) {
	s.RegisterService(&_GroupInvitationManager_serviceDesc, srv)
}

func _GroupInvitationManager_GroupInvitationAccept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupInvitationAcceptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupInvitationManagerServer).GroupInvitationAccept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GroupInvitationManager/GroupInvitationAccept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupInvitationManagerServer).GroupInvitationAccept(ctx, req.(*GroupInvitationAcceptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupInvitationManager_GroupInvitationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupInvitationCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupInvitationManagerServer).GroupInvitationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GroupInvitationManager/GroupInvitationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupInvitationManagerServer).GroupInvitationCreate(ctx, req.(*GroupInvitationCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupInvitationManager_GroupInvitationDiscard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupInvitationDiscardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupInvitationManagerServer).GroupInvitationDiscard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GroupInvitationManager/GroupInvitationDiscard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupInvitationManagerServer).GroupInvitationDiscard(ctx, req.(*GroupInvitationDiscardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupInvitationManager_GroupInvitationList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GroupInvitationListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GroupInvitationManagerServer).GroupInvitationList(m, &groupInvitationManagerGroupInvitationListServer{stream})
}

type GroupInvitationManager_GroupInvitationListServer interface {
	Send(*GroupInvitationListReply) error
	grpc.ServerStream
}

type groupInvitationManagerGroupInvitationListServer struct {
	grpc.ServerStream
}

func (x *groupInvitationManagerGroupInvitationListServer) Send(m *GroupInvitationListReply) error {
	return x.ServerStream.SendMsg(m)
}

var _GroupInvitationManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GroupInvitationManager",
	HandlerType: (*GroupInvitationManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GroupInvitationAccept",
			Handler:    _GroupInvitationManager_GroupInvitationAccept_Handler,
		},
		{
			MethodName: "GroupInvitationCreate",
			Handler:    _GroupInvitationManager_GroupInvitationCreate_Handler,
		},
		{
			MethodName: "GroupInvitationDiscard",
			Handler:    _GroupInvitationManager_GroupInvitationDiscard_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GroupInvitationList",
			Handler:       _GroupInvitationManager_GroupInvitationList_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bertyprotocol.proto",
}

func (m *SigChainEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SigChainEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SigChainEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *SigChain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SigChain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SigChain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBertyprotocol(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Contact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Contact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Contact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContactStatus != 0 {
		i = encodeVarintBertyprotocol(dAtA, i, uint64(m.ContactStatus))
		i--
		dAtA[i] = 0x28
	}
	if len(m.SharedSecret) > 0 {
		i -= len(m.SharedSecret)
		copy(dAtA[i:], m.SharedSecret)
		i = encodeVarintBertyprotocol(dAtA, i, uint64(len(m.SharedSecret)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RendezvousPointSeed) > 0 {
		i -= len(m.RendezvousPointSeed)
		copy(dAtA[i:], m.RendezvousPointSeed)
		i = encodeVarintBertyprotocol(dAtA, i, uint64(len(m.RendezvousPointSeed)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintBertyprotocol(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x12
	}
	if m.SigChain != nil {
		{
			size, err := m.SigChain.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBertyprotocol(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RendezvousPointEnabled {
		i--
		if m.RendezvousPointEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DeviceConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeviceConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeviceConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *Device) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Device) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Device) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AccountPubKey) > 0 {
		i -= len(m.AccountPubKey)
		copy(dAtA[i:], m.AccountPubKey)
		i = encodeVarintBertyprotocol(dAtA, i, uint64(len(m.AccountPubKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DevicePubKey) > 0 {
		i -= len(m.DevicePubKey)
		copy(dAtA[i:], m.DevicePubKey)
		i = encodeVarintBertyprotocol(dAtA, i, uint64(len(m.DevicePubKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventSubscribeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventSubscribeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventSubscribeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *EventStream) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventStream) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventStream) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *CurrentDeviceExportDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CurrentDeviceExportDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CurrentDeviceExportDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *CurrentDeviceExportDataReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CurrentDeviceExportDataReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CurrentDeviceExportDataReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountGetInformationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetInformationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetInformationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountGetInformationReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetInformationReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetInformationReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *CurrentDeviceGetConfigurationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CurrentDeviceGetConfigurationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CurrentDeviceGetConfigurationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *CurrentDeviceGetConfigurationReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CurrentDeviceGetConfigurationReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CurrentDeviceGetConfigurationReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountGetConfigurationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetConfigurationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetConfigurationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountGetConfigurationReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetConfigurationReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetConfigurationReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountLinkNewDeviceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountLinkNewDeviceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountLinkNewDeviceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountLinkNewDeviceReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountLinkNewDeviceReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountLinkNewDeviceReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountDisableIncomingContactRequestRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountDisableIncomingContactRequestRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountDisableIncomingContactRequestRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountDisableIncomingContactRequestReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountDisableIncomingContactRequestReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountDisableIncomingContactRequestReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountEnableIncomingContactRequestRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountEnableIncomingContactRequestRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountEnableIncomingContactRequestRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountEnableIncomingContactRequestReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountEnableIncomingContactRequestReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountEnableIncomingContactRequestReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountResetIncomingContactRequestLinkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountResetIncomingContactRequestLinkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountResetIncomingContactRequestLinkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AccountResetIncomingContactRequestLinkReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountResetIncomingContactRequestLinkReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountResetIncomingContactRequestLinkReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestAcceptRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestAcceptRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestAcceptRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestAcceptReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestAcceptReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestAcceptReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestDiscardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestDiscardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestDiscardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestDiscardReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestDiscardReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestDiscardReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestListIncomingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestListIncomingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestListIncomingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestListIncomingReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestListIncomingReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestListIncomingReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestListOutgoingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestListOutgoingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestListOutgoingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestListOutgoingReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestListOutgoingReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestListOutgoingReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestSendRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestSendRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestSendRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestSendReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestSendReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestSendReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactGetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactGetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactGetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactGetReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactGetReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactGetReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *StreamManagerRequestToContactRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StreamManagerRequestToContactRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StreamManagerRequestToContactRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *StreamManagerRequestToContactReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StreamManagerRequestToContactReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StreamManagerRequestToContactReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRemoveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRemoveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRemoveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactRemoveReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRemoveReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRemoveReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ContactListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *StreamManagerAcceptRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StreamManagerAcceptRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StreamManagerAcceptRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *StreamManagerAcceptReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StreamManagerAcceptReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StreamManagerAcceptReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupCreateReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupCreateReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupCreateReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupGenerateInviteLinkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupGenerateInviteLinkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupGenerateInviteLinkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupGenerateInviteLinkReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupGenerateInviteLinkReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupGenerateInviteLinkReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupLeaveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupLeaveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupLeaveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupLeaveReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupLeaveReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupLeaveReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupMessageCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupMessageCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupMessageCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupMessageCreateReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupMessageCreateReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupMessageCreateReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupMessageListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupMessageListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupMessageListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupMessageListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupMessageListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupMessageListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationAcceptRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationAcceptRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationAcceptRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationAcceptReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationAcceptReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationAcceptReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationCreateReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationCreateReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationCreateReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationDiscardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationDiscardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationDiscardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationDiscardReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationDiscardReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationDiscardReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupInvitationListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInvitationListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInvitationListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupPubSubTopicInitRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupPubSubTopicInitRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupPubSubTopicInitRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupPubSubTopicInitReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupPubSubTopicInitReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupPubSubTopicInitReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupBroadcastSendRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupBroadcastSendRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupBroadcastSendRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupBroadcastSendReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupBroadcastSendReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupBroadcastSendReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupPubSubTopicSubscribeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupPubSubTopicSubscribeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupPubSubTopicSubscribeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GroupPubSubTopicSubscribeReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupPubSubTopicSubscribeReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupPubSubTopicSubscribeReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintBertyprotocol(dAtA []byte, offset int, v uint64) int {
	offset -= sovBertyprotocol(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SigChainEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SigChain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovBertyprotocol(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Contact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SigChain != nil {
		l = m.SigChain.Size()
		n += 1 + l + sovBertyprotocol(uint64(l))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovBertyprotocol(uint64(l))
	}
	l = len(m.RendezvousPointSeed)
	if l > 0 {
		n += 1 + l + sovBertyprotocol(uint64(l))
	}
	l = len(m.SharedSecret)
	if l > 0 {
		n += 1 + l + sovBertyprotocol(uint64(l))
	}
	if m.ContactStatus != 0 {
		n += 1 + sovBertyprotocol(uint64(m.ContactStatus))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RendezvousPointEnabled {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeviceConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Device) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DevicePubKey)
	if l > 0 {
		n += 1 + l + sovBertyprotocol(uint64(l))
	}
	l = len(m.AccountPubKey)
	if l > 0 {
		n += 1 + l + sovBertyprotocol(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EventSubscribeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EventStream) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CurrentDeviceExportDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CurrentDeviceExportDataReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountGetInformationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountGetInformationReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CurrentDeviceGetConfigurationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CurrentDeviceGetConfigurationReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountGetConfigurationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountGetConfigurationReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountLinkNewDeviceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountLinkNewDeviceReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountDisableIncomingContactRequestRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountDisableIncomingContactRequestReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountEnableIncomingContactRequestRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountEnableIncomingContactRequestReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountResetIncomingContactRequestLinkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountResetIncomingContactRequestLinkReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestAcceptRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestAcceptReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestDiscardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestDiscardReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestListIncomingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestListIncomingReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestListOutgoingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestListOutgoingReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestSendRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestSendReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactGetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactGetReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StreamManagerRequestToContactRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StreamManagerRequestToContactReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRemoveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRemoveReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StreamManagerAcceptRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StreamManagerAcceptReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupCreateReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupGenerateInviteLinkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupGenerateInviteLinkReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupLeaveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupLeaveReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupMessageCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupMessageCreateReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupMessageListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupMessageListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationAcceptRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationAcceptReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationCreateReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationDiscardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationDiscardReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInvitationListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupPubSubTopicInitRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupPubSubTopicInitReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupBroadcastSendRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupBroadcastSendReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupPubSubTopicSubscribeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupPubSubTopicSubscribeReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBertyprotocol(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBertyprotocol(x uint64) (n int) {
	return sovBertyprotocol(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SigChainEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SigChainEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SigChainEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SigChain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SigChain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SigChain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &SigChainEntry{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Contact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Contact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Contact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SigChain", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SigChain == nil {
				m.SigChain = &SigChain{}
			}
			if err := m.SigChain.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RendezvousPointSeed", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RendezvousPointSeed = append(m.RendezvousPointSeed[:0], dAtA[iNdEx:postIndex]...)
			if m.RendezvousPointSeed == nil {
				m.RendezvousPointSeed = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SharedSecret", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SharedSecret = append(m.SharedSecret[:0], dAtA[iNdEx:postIndex]...)
			if m.SharedSecret == nil {
				m.SharedSecret = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactStatus", wireType)
			}
			m.ContactStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContactStatus |= Contact_ContactStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RendezvousPointEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RendezvousPointEnabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeviceConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeviceConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeviceConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Device) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Device: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Device: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DevicePubKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DevicePubKey = append(m.DevicePubKey[:0], dAtA[iNdEx:postIndex]...)
			if m.DevicePubKey == nil {
				m.DevicePubKey = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountPubKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountPubKey = append(m.AccountPubKey[:0], dAtA[iNdEx:postIndex]...)
			if m.AccountPubKey == nil {
				m.AccountPubKey = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventSubscribeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventSubscribeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventSubscribeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventStream) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventStream: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventStream: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CurrentDeviceExportDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CurrentDeviceExportDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CurrentDeviceExportDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CurrentDeviceExportDataReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CurrentDeviceExportDataReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CurrentDeviceExportDataReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetInformationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetInformationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetInformationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetInformationReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetInformationReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetInformationReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CurrentDeviceGetConfigurationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CurrentDeviceGetConfigurationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CurrentDeviceGetConfigurationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CurrentDeviceGetConfigurationReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CurrentDeviceGetConfigurationReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CurrentDeviceGetConfigurationReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetConfigurationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetConfigurationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetConfigurationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetConfigurationReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetConfigurationReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetConfigurationReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountLinkNewDeviceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountLinkNewDeviceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountLinkNewDeviceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountLinkNewDeviceReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountLinkNewDeviceReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountLinkNewDeviceReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountDisableIncomingContactRequestRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountDisableIncomingContactRequestRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountDisableIncomingContactRequestRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountDisableIncomingContactRequestReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountDisableIncomingContactRequestReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountDisableIncomingContactRequestReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountEnableIncomingContactRequestRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountEnableIncomingContactRequestRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountEnableIncomingContactRequestRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountEnableIncomingContactRequestReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountEnableIncomingContactRequestReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountEnableIncomingContactRequestReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountResetIncomingContactRequestLinkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountResetIncomingContactRequestLinkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountResetIncomingContactRequestLinkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountResetIncomingContactRequestLinkReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountResetIncomingContactRequestLinkReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountResetIncomingContactRequestLinkReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestAcceptRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestAcceptRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestAcceptRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestAcceptReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestAcceptReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestAcceptReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestDiscardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestDiscardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestDiscardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestDiscardReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestDiscardReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestDiscardReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestListIncomingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestListIncomingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestListIncomingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestListIncomingReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestListIncomingReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestListIncomingReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestListOutgoingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestListOutgoingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestListOutgoingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestListOutgoingReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestListOutgoingReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestListOutgoingReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestSendRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestSendRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestSendRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestSendReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestSendReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestSendReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactGetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactGetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactGetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactGetReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactGetReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactGetReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StreamManagerRequestToContactRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StreamManagerRequestToContactRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StreamManagerRequestToContactRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StreamManagerRequestToContactReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StreamManagerRequestToContactReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StreamManagerRequestToContactReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRemoveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRemoveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRemoveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRemoveReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRemoveReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRemoveReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StreamManagerAcceptRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StreamManagerAcceptRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StreamManagerAcceptRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StreamManagerAcceptReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StreamManagerAcceptReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StreamManagerAcceptReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupCreateReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupCreateReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupCreateReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupGenerateInviteLinkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupGenerateInviteLinkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupGenerateInviteLinkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupGenerateInviteLinkReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupGenerateInviteLinkReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupGenerateInviteLinkReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupLeaveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupLeaveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupLeaveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupLeaveReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupLeaveReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupLeaveReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupMessageCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupMessageCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupMessageCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupMessageCreateReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupMessageCreateReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupMessageCreateReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupMessageListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupMessageListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupMessageListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupMessageListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupMessageListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupMessageListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationAcceptRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationAcceptRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationAcceptRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationAcceptReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationAcceptReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationAcceptReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationCreateReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationCreateReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationCreateReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationDiscardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationDiscardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationDiscardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationDiscardReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationDiscardReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationDiscardReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInvitationListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInvitationListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInvitationListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupPubSubTopicInitRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupPubSubTopicInitRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupPubSubTopicInitRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupPubSubTopicInitReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupPubSubTopicInitReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupPubSubTopicInitReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupBroadcastSendRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupBroadcastSendRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupBroadcastSendRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupBroadcastSendReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupBroadcastSendReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupBroadcastSendReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupPubSubTopicSubscribeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupPubSubTopicSubscribeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupPubSubTopicSubscribeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupPubSubTopicSubscribeReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupPubSubTopicSubscribeReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupPubSubTopicSubscribeReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBertyprotocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBertyprotocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBertyprotocol(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBertyprotocol
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBertyprotocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBertyprotocol
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthBertyprotocol
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBertyprotocol
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBertyprotocol(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthBertyprotocol
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBertyprotocol = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBertyprotocol   = fmt.Errorf("proto: integer overflow")
)
